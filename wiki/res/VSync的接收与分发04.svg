<?xml version="1.0" encoding="UTF-8"?>
<!-- Do not edit this file with editors other than diagrams.net -->
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" width="5621px" height="2850px" viewBox="-0.5 -0.5 5621 2850" content="&lt;mxfile host=&quot;app.diagrams.net&quot; modified=&quot;2022-11-01T05:51:24.357Z&quot; agent=&quot;5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/106.0.0.0 Safari/537.36&quot; etag=&quot;jWTQdWXezo7VANoxoVdB&quot; version=&quot;20.5.1&quot; type=&quot;device&quot;&gt;&lt;diagram id=&quot;89uVAJhbzzb_TbjBp1ZZ&quot; name=&quot;Page-1&quot;&gt;&lt;/diagram&gt;&lt;/mxfile&gt;" style="background-color: rgb(255, 255, 255);"><defs/><g><rect x="1570" y="2170" width="640" height="190" fill="#fff2cc" stroke="#d6b656" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 637px; height: 1px; padding-top: 2170px; margin-left: 1575px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: &quot;Courier New&quot;; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><pre style=""><pre style=""><pre style=""><pre style=""><div style="line-height: 16px;"><div style=""><pre style=""><pre style=""><pre style=""><pre style=""><font face="Consolas, monospace" color="#cccccc"><span style="font-size: 11.0667px;">// aosp_android-12.1.0_r2\frameworks\native\services\surfaceflinger\Scheduler\SchedulerUtils.h</span><span style="font-size: 8.3pt;"><br /></span></font><span style="color: rgb(140, 140, 140); font-family: Consolas, monospace; font-size: 8.3pt; font-style: italic;">// Opaque handle to scheduler connection.<br /></span><span style="color: rgb(0, 51, 179); font-family: Consolas, monospace; font-size: 8.3pt;">struct </span><span style="color: rgb(0, 128, 128); font-family: Consolas, monospace; font-size: 8.3pt;">ConnectionHandle </span><font color="#080808" face="Consolas, monospace"><span style="font-size: 8.3pt;">{<br />    </span></font><span style="color: rgb(0, 51, 179); font-family: Consolas, monospace; font-size: 8.3pt;">using </span><span style="color: rgb(55, 31, 128); font-family: Consolas, monospace; font-size: 8.3pt;">Id </span><font color="#080808" face="Consolas, monospace"><span style="font-size: 8.3pt;">= </span></font><span style="color: rgb(0, 128, 128); font-family: Consolas, monospace; font-size: 8.3pt;">std</span><font color="#080808" face="Consolas, monospace"><span style="font-size: 8.3pt;">::</span></font><span style="color: rgb(55, 31, 128); font-family: Consolas, monospace; font-size: 8.3pt;">uintptr_t</span><font color="#080808" face="Consolas, monospace"><span style="font-size: 8.3pt;">;<br />    </span></font><span style="color: rgb(0, 51, 179); font-family: Consolas, monospace; font-size: 8.3pt;">static constexpr </span><span style="color: rgb(55, 31, 128); font-family: Consolas, monospace; font-size: 8.3pt;">Id </span><span style="color: rgb(102, 14, 122); font-family: Consolas, monospace; font-size: 8.3pt;">INVALID_ID </span><font color="#080808" face="Consolas, monospace"><span style="font-size: 8.3pt;">= </span></font><span style="color: rgb(0, 51, 179); font-family: Consolas, monospace; font-size: 8.3pt;">static_cast</span><font color="#080808" face="Consolas, monospace"><span style="font-size: 8.3pt;">&lt;</span></font><span style="color: rgb(55, 31, 128); font-family: Consolas, monospace; font-size: 8.3pt;">Id</span><font color="#080808" face="Consolas, monospace"><span style="font-size: 8.3pt;">&gt;(-</span></font><span style="color: rgb(23, 80, 235); font-family: Consolas, monospace; font-size: 8.3pt;">1</span><font color="#080808" face="Consolas, monospace"><span style="font-size: 8.3pt;">);<br /><br />    </span></font><span style="color: rgb(55, 31, 128); font-family: Consolas, monospace; font-size: 8.3pt;">Id </span><span style="color: rgb(102, 14, 122); font-family: Consolas, monospace; font-size: 8.3pt;">id </span><font color="#080808" face="Consolas, monospace"><span style="font-size: 8.3pt;">= </span></font><span style="color: rgb(102, 14, 122); font-family: Consolas, monospace; font-size: 8.3pt;">INVALID_ID</span><font color="#080808" face="Consolas, monospace"><span style="font-size: 8.3pt;">;<br /><br />    </span></font><span style="color: rgb(0, 51, 179); font-family: Consolas, monospace; font-size: 8.3pt;">explicit operator bool</span><font color="#080808" face="Consolas, monospace"><span style="font-size: 8.3pt;">() </span></font><span style="color: rgb(0, 51, 179); font-family: Consolas, monospace; font-size: 8.3pt;">const </span><font color="#080808" face="Consolas, monospace"><span style="font-size: 8.3pt;">{ </span></font><span style="color: rgb(0, 51, 179); font-family: Consolas, monospace; font-size: 8.3pt;">return </span><span style="color: rgb(102, 14, 122); font-family: Consolas, monospace; font-size: 8.3pt;">id </span><font color="#080808" face="Consolas, monospace"><span style="font-size: 8.3pt;">!= </span></font><span style="color: rgb(102, 14, 122); font-family: Consolas, monospace; font-size: 8.3pt;">INVALID_ID</span><font color="#080808" face="Consolas, monospace"><span style="font-size: 8.3pt;">; }<br />};</span></font></pre></pre></pre></pre></div></div></pre></pre></pre></pre></div></div></div></foreignObject><text x="1575" y="2182" fill="rgb(0, 0, 0)" font-family="Courier New" font-size="12px">// aosp_android-12.1.0_r2\frameworks\native\services\surfaceflinger\Scheduler\SchedulerUtils.h// Opaque ha...</text></switch></g><ellipse cx="1715" cy="2224" rx="5" ry="5" fill="#d6b656" stroke="#d6b656" pointer-events="all"/><rect x="1530" y="2370" width="680" height="310" fill="#fff2cc" stroke="#d6b656" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 677px; height: 1px; padding-top: 2370px; margin-left: 1535px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: &quot;Courier New&quot;; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><pre style=""><pre style=""><pre style=""><pre style=""><div style="line-height: 16px;"><div style=""><pre style=""><pre style=""><pre style=""><pre style=""><pre style=""><font color="#cccccc"><font face="Consolas, monospace"><span style="font-size: 11.0667px;">// aosp_android-12.1.0_r2\frameworks\base\core\java\android\view\DisplayEventReceiver.java</span></font><font face="Consolas, monospace"><span style="font-size: 8.3pt;"><i style=""><br /></i></span></font></font><span style="font-family: Consolas, monospace; font-size: 8.3pt; color: rgb(0, 0, 128); font-weight: bold;">public abstract class </span><font face="Consolas, monospace"><span style="font-size: 8.3pt;">DisplayEventReceiver {<br /><br />    </span></font><span style="font-family: Consolas, monospace; font-size: 8.3pt; color: rgb(128, 128, 128); font-style: italic;">/**<br /></span><span style="font-family: Consolas, monospace; font-size: 8.3pt; color: rgb(128, 128, 128); font-style: italic;">     * When retrieving vsync events, this specifies that the vsync event should happen at the normal<br /></span><span style="font-family: Consolas, monospace; font-size: 8.3pt; color: rgb(128, 128, 128); font-style: italic;">     * vsync-app tick.<br /></span><span style="font-family: Consolas, monospace; font-size: 8.3pt; color: rgb(128, 128, 128); font-style: italic;">     * </span><span style="font-family: Consolas, monospace; font-size: 8.3pt; color: rgb(128, 128, 128); font-style: italic;">&lt;p&gt;</span><span style="font-family: Consolas, monospace; font-size: 8.3pt; color: rgb(128, 128, 128); font-style: italic;"><br /></span><span style="font-family: Consolas, monospace; font-size: 8.3pt; color: rgb(128, 128, 128); font-style: italic;">     * Needs to be kept in sync with frameworks/native/include/gui/ISurfaceComposer.h<br /></span><span style="font-family: Consolas, monospace; font-size: 8.3pt; color: rgb(128, 128, 128); font-style: italic;">     */<br /></span><span style="font-family: Consolas, monospace; font-size: 8.3pt; color: rgb(128, 128, 128); font-style: italic;">    </span><span style="font-family: Consolas, monospace; font-size: 8.3pt; color: rgb(0, 0, 128); font-weight: bold;">public static final int </span><span style="font-family: Consolas, monospace; font-size: 8.3pt; color: rgb(102, 14, 122); font-weight: bold; font-style: italic;">VSYNC_SOURCE_APP </span><font face="Consolas, monospace"><span style="font-size: 8.3pt;">= </span></font><span style="font-family: Consolas, monospace; font-size: 8.3pt; color: rgb(0, 0, 255);">0</span><font face="Consolas, monospace"><span style="font-size: 8.3pt;">;<br /><br />    </span></font><span style="font-family: Consolas, monospace; font-size: 8.3pt; color: rgb(128, 128, 128); font-style: italic;">/**<br /></span><span style="font-family: Consolas, monospace; font-size: 8.3pt; color: rgb(128, 128, 128); font-style: italic;">     * When retrieving vsync events, this specifies that the vsync event should happen whenever<br /></span><span style="font-family: Consolas, monospace; font-size: 8.3pt; color: rgb(128, 128, 128); font-style: italic;">     * Surface Flinger is processing a frame.<br /></span><span style="font-family: Consolas, monospace; font-size: 8.3pt; color: rgb(128, 128, 128); font-style: italic;">     * </span><span style="font-family: Consolas, monospace; font-size: 8.3pt; color: rgb(128, 128, 128); font-style: italic;">&lt;p&gt;</span><span style="font-family: Consolas, monospace; font-size: 8.3pt; color: rgb(128, 128, 128); font-style: italic;"><br /></span><span style="font-family: Consolas, monospace; font-size: 8.3pt; color: rgb(128, 128, 128); font-style: italic;">     * Needs to be kept in sync with frameworks/native/include/gui/ISurfaceComposer.h<br /></span><span style="font-family: Consolas, monospace; font-size: 8.3pt; color: rgb(128, 128, 128); font-style: italic;">     */<br /></span><span style="font-family: Consolas, monospace; font-size: 8.3pt; color: rgb(128, 128, 128); font-style: italic;">    </span><span style="font-family: Consolas, monospace; font-size: 8.3pt; color: rgb(0, 0, 128); font-weight: bold;">public static final int </span><span style="font-family: Consolas, monospace; font-size: 8.3pt; color: rgb(102, 14, 122); font-weight: bold; font-style: italic;">VSYNC_SOURCE_SURFACE_FLINGER </span><font face="Consolas, monospace"><span style="font-size: 8.3pt;">= </span></font><span style="font-family: Consolas, monospace; font-size: 8.3pt; color: rgb(0, 0, 255);">1</span><font face="Consolas, monospace"><span style="font-size: 8.3pt;">;</span></font></pre></pre></pre></pre></pre></div></div></pre></pre></pre></pre></div></div></div></foreignObject><text x="1535" y="2382" fill="rgb(0, 0, 0)" font-family="Courier New" font-size="12px">// aosp_android-12.1.0_r2\frameworks\base\core\java\android\view\DisplayEventReceiver.javapublic abstract class D...</text></switch></g><ellipse cx="1785" cy="2535" rx="5" ry="5" fill="#d6b656" stroke="#d6b656" pointer-events="all"/><rect x="30" y="0" width="1260" height="20" fill="#ffff00" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 1262px; height: 1px; padding-top: 10px; margin-left: 30px;"><div data-drawio-colors="color: #FF0000; " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(255, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">【进程信息】SurfaceFlinger@main：发起进程初始化</div></div></div></foreignObject><text x="30" y="14" fill="#FF0000" font-family="Helvetica" font-size="12px">【进程信息】SurfaceFlinger@main：发起进程初始化</text></switch></g><rect x="30" y="20" width="1260" height="630" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 1257px; height: 1px; padding-top: 20px; margin-left: 35px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: &quot;Courier New&quot;; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><pre style=""><pre style=""><pre style=""><pre style=""><div style="line-height: 16px;"><div style=""><font face="Consolas, Courier New, monospace" style=""><font color="#3f7f5f" style="">#18 bionic/libc/bionic/libc_init_dynamic.cpp:155<br /></font>(discriminator 2)  __libc_init<br /><font color="#3f7f5f" style="">#17 frameworks/native/services/surfaceflinger/main_surfaceflinger.cpp:149 <br /></font><b style="">main</b><br /><font color="#3f7f5f" style="">#16 frameworks/native/services/surfaceflinger/SurfaceFlinger.cpp:832  <br /></font>android::SurfaceFlinger::<b style="">init</b>()<br /><font color="#3f7f5f" style="">#15 frameworks/native/services/surfaceflinger/DisplayHardware/HWComposer.cpp:162<br /></font>android::impl::HWComposer::<b style="">setCallback</b>(android::HWC2::ComposerCallback*)<br /><font color="#3f7f5f" style="">#14 frameworks/native/services/surfaceflinger/DisplayHardware/ComposerHal.cpp:189<br /></font>android::Hwc2::impl::Composer::<b style="">registerCallback</b>(</font><font face="Consolas, Courier New, monospace" style="">android::sp&lt;android::hardware::graphics::composer::V2_4::IComposerCallback&gt; const&amp;)<br /><font color="#3f7f5f">#13 frameworks/native/services/surfaceflinger/DisplayHardware/ComposerHal.cpp:191  <br /></font>operator()<br /><font color="#3f7f5f">#12 out/soong/.intermediates/hardware/interfaces/graphics/composer/2.4/<br />android.hardware.graphics.composer@2.4_genc++/gen/android/hardware/graphics/composer/2.4/<br />ComposerClientAll.cpp:1347<br /></font>android::hardware::graphics::composer::V2_4::BpHwComposerClient::<b>registerCallback_2_4</b>(</font><font face="Consolas, Courier New, monospace" style="">android::sp&lt;android::hardware::graphics::composer::V2_4::IComposerCallback&gt; const&amp;)<br /><font color="#3f7f5f">#11 out/soong/.intermediates/hardware/interfaces/graphics/composer/2.4/android.hardware.graphics.composer@2.4_genc++/gen/android/hardware/graphics/composer/2.4/ComposerClientAll.cpp:297<br /></font>android::hardware::graphics::composer::V2_4::BpHwComposerClient::<b>_hidl_registerCallback_2_4</b>(...</font><font face="Consolas, Courier New, monospace" style="">)<br />#10 ??:?  <br />android::hardware::</font><font face="Consolas, Courier New, monospace" style="">BpHwBinder::<b style="">transact</b>(...</font><font face="Consolas, Courier New, monospace" style="">)<br />#09 ??:?  <br />android::hardware::IPCThreadState::<b>transact</b>(...</font><font face="Consolas, Courier New, monospace" style="">)<br /><font color="#3f7f5f">#08 system/libhwbinder/Binder.cpp:135<br /></font>android::hardware::BHwBinder::<b>transact</b>(...</font><font face="Consolas, Courier New, monospace" style="">)<br /><font color="#3f7f5f">#07 out/soong/.intermediates/hardware/interfaces/graphics/composer/2.4/android.hardware.graphics.composer@2.4_genc++/gen/android/hardware/graphics/composer/2.4/ComposerCallbackAll.cpp:653<br /></font>android::hardware::graphics::composer::V2_4::</font><font face="Consolas, Courier New, monospace" style="">BnHwComposerCallback::<b style="">onTransact</b>(...</font><font face="Consolas, Courier New, monospace" style="">)<br /><font color="#3f7f5f">#06 out/soong/.intermediates/hardware/interfaces/graphics/composer/2.1/android.hardware.graphics.composer@2.1_genc++/gen/android/hardware/graphics/composer/2.1/ComposerCallbackAll.cpp:448<br /></font>android::hardware::graphics::composer::V2_1::BnHwComposerCallback::_hidl_onHotplug(...</font><font face="Consolas, Courier New, monospace" style="">)<br /><font color="#3f7f5f">#05 frameworks/native/services/surfaceflinger/DisplayHardware/HWComposer.cpp:89<br /></font>android::(anonymous namespace)::ComposerCallbackBridge::<b>onHotplug</b>(unsigned long, android::hardware::graphics::composer::V2_1::IComposerCallback::Connection)<br /><font color="#3f7f5f">#04 frameworks/native/services/surfaceflinger/SurfaceFlinger.cpp:1797<br /></font>android::</font><font face="Consolas, Courier New, monospace" style="">SurfaceFlinger::<b style="">onComposerHalHotplug</b>(</font><font face="Consolas, Courier New, monospace" style="">unsigned long,</font><font face="Consolas, Courier New, monospace" style="">android::hardware::graphics::composer::V2_1::IComposerCallback::Connection)<br /><font color="#3f7f5f">#03 frameworks/native/services/surfaceflinger/SurfaceFlinger.cpp:2653<br /></font>android::SurfaceFlinger::<b>processDisplayHotplugEventsLocked</b>()<br /><font color="#3f7f5f">#02 frameworks/native/services/surfaceflinger/SurfaceFlinger.cpp:2973<br /></font>android::SurfaceFlinger::<b>processDisplayChangesLocked</b>()   <br /><font color="#3f7f5f">#01 frameworks/native/services/surfaceflinger/SurfaceFlinger.cpp:2833<br /></font>android::</font><font face="Consolas, Courier New, monospace" style="">SurfaceFlinger::<b style="">processDisplayAdded</b>(</font><font face="Consolas, Courier New, monospace" style="">android::wp&lt;android::IBinder&gt; const&amp;,</font><font face="Consolas, Courier New, monospace" style="">android::DisplayDeviceState const&amp;)</font><font face="Consolas, Courier New, monospace" style="background-color: rgb(255, 255, 255);"><br /></font></div></div></pre></pre></pre></pre></div></div></div></foreignObject><text x="35" y="32" fill="rgb(0, 0, 0)" font-family="Courier New" font-size="12px">#18 bionic/libc/bionic/libc_init_dynamic.cpp:155...</text></switch></g><rect x="790" y="1770" width="680" height="970" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 677px; height: 1px; padding-top: 1770px; margin-left: 795px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: &quot;Courier New&quot;; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><pre style=""><pre style=""><pre style=""><pre style=""><div style="line-height: 16px;"><div style=""><pre style=""><font color="#cccccc" style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255);">// aosp_android-12.1.0_r2\frameworks\native\services\surfaceflinger\SurfaceFlinger.cpp<br /></font><span style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255); color: rgb(0, 51, 179);">void </span><span style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255); color: rgb(0, 128, 128);">SurfaceFlinger</span><font color="#080808" style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255);">::</font><span style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255); color: rgb(0, 98, 122);">initScheduler</span><font color="#080808" style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255);">(</font><span style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255); color: rgb(0, 51, 179);">const </span><span style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255); color: rgb(0, 128, 128);">sp</span><font color="#080808" style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255);">&lt;</font><span style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255); color: rgb(0, 128, 128);">DisplayDevice</span><font color="#080808" style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255);">&gt;&amp; display) {<br />    </font><span style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255); color: rgb(0, 51, 179);">if </span><font color="#080808" style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255);">(</font><span style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255); color: rgb(102, 14, 122);">mScheduler</span><font color="#080808" style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255);">) {<br />        </font><span style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255); color: rgb(140, 140, 140); font-style: italic;">// If the scheduler is already initialized, this means that we received<br /></span><span style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255); color: rgb(140, 140, 140); font-style: italic;">        // a hotplug(connected) on the primary display. In that case we should<br /></span><span style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255); color: rgb(140, 140, 140); font-style: italic;">        // update the scheduler with the most recent display information.<br /></span><span style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255); color: rgb(140, 140, 140); font-style: italic;">        </span><span style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255); color: rgb(31, 84, 46); font-weight: bold;">ALOGW</span><font color="#080808" style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255);">(</font><span style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255); color: rgb(6, 125, 23);">"Scheduler already initialized, updating instead"</span><font color="#080808" style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255);">);<br />        </font><span style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255); color: rgb(102, 14, 122);">mScheduler</span><span style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255); color: rgb(0, 128, 128);">-&gt;</span><font color="#080808" style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255);">setRefreshRateConfigs(display</font><span style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255); color: rgb(0, 128, 128);">-&gt;</span><font color="#080808" style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255);">holdRefreshRateConfigs());<br />        </font><span style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255); color: rgb(0, 51, 179);">return</span><font color="#080808" style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255);">;<br />    }<br />    </font><span style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255); color: rgb(0, 51, 179);">const auto </span><span style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255); color: rgb(0, 0, 0);">currRefreshRate </span><font color="#080808" style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255);">= display</font><span style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255); color: rgb(0, 128, 128);">-&gt;</span><font color="#080808" style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255);">getActiveMode()</font><span style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255); color: rgb(0, 128, 128);">-&gt;</span><font color="#080808" style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255);">getFps();<br />    mRefreshRateStats = std::make_unique&lt;scheduler::RefreshRateStats&gt;(*mTimeStats, currRefreshRate,<br />                                                                      hal::PowerMode::OFF);<br /><br />    </font><span style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255); color: rgb(102, 14, 122);">mVsyncConfiguration </span><span style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255); color: rgb(0, 128, 128);">= </span><font color="#080808" style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255);">getFactory().createVsyncConfiguration(</font><span style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255); color: rgb(0, 0, 0);">currRefreshRate</span><font color="#080808" style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255);">);<br />    </font><span style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255); color: rgb(102, 14, 122);">mVsyncModulator </span><span style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255); color: rgb(0, 128, 128);">= sp</span><font color="#080808" style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255);">&lt;</font><span style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255); color: rgb(55, 31, 128);">VsyncModulator</span><font color="#080808" style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255);">&gt;::make(</font><span style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255); color: rgb(102, 14, 122);">mVsyncConfiguration</span><span style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255); color: rgb(0, 128, 128);">-&gt;</span><font color="#080808" style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255);">getCurrentConfigs());<br /><br />    </font><span style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255); color: rgb(140, 140, 140); font-style: italic;">// start the EventThread<br /></span><span style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255); color: rgb(140, 140, 140); font-style: italic;">    </span><span style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255); color: rgb(102, 14, 122);">mScheduler </span><span style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255); color: rgb(0, 128, 128);">= </span><font color="#080808" style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255);">getFactory().createScheduler(display</font><span style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255); color: rgb(0, 128, 128);">-&gt;</span><font color="#080808" style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255);">holdRefreshRateConfigs(), *</font><span style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255); color: rgb(0, 51, 179);">this</span><font color="#080808" style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255);">);<br />    </font><span style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255); color: rgb(0, 51, 179);">const auto </span><span style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255); color: rgb(0, 0, 0);">configs </span><font color="#080808" style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255);">= </font><span style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255); color: rgb(102, 14, 122);">mVsyncConfiguration</span><span style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255); color: rgb(0, 128, 128);">-&gt;</span><font color="#080808" style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255);">getCurrentConfigs();<br />    </font><span style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255); color: rgb(0, 51, 179);">const </span><span style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255); color: rgb(55, 31, 128);">nsecs_t </span><span style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255); color: rgb(0, 0, 0);">vsyncPeriod </span><font color="#080808" style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255);">= </font><span style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255); color: rgb(0, 0, 0);">currRefreshRate</span><font color="#080808" style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255);">.getPeriodNsecs();<br />    </font><span style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255); color: rgb(102, 14, 122);">mAppConnectionHandle </span><font color="#080808" style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255);">=<br />            </font><span style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255); color: rgb(102, 14, 122);">mScheduler</span><span style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255); color: rgb(0, 128, 128);">-&gt;</span><font color="#080808" style="font-family: Consolas, monospace; font-size: 8.3pt;"><span style="background-color: rgb(204, 204, 204);">createConnection</span><span style="background-color: rgb(255, 255, 255);">(</span></font><span style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255); color: rgb(6, 125, 23);">"app"</span><font color="#080808" style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255);">, </font><span style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255); color: rgb(102, 14, 122);">mFrameTimeline</span><span style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255); color: rgb(0, 128, 128);">-&gt;</span><font color="#080808" style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255);">getTokenManager(),<br />                                         </font><span style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255); color: rgb(140, 140, 140); font-style: italic;">/*workDuration=*/</span><span style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255); color: rgb(0, 0, 0);">configs</span><font color="#080808" style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255);">.</font><span style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255); color: rgb(102, 14, 122);">late</span><font color="#080808" style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255);">.</font><span style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255); color: rgb(102, 14, 122);">appWorkDuration</span><font color="#080808" style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255);">,<br />                                         </font><span style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255); color: rgb(140, 140, 140); font-style: italic;">/*readyDuration=*/</span><span style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255); color: rgb(0, 0, 0);">configs</span><font color="#080808" style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255);">.</font><span style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255); color: rgb(102, 14, 122);">late</span><font color="#080808" style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255);">.</font><span style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255); color: rgb(102, 14, 122);">sfWorkDuration</span><font color="#080808" style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255);">,<br />                                         </font><span style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255); color: rgb(0, 128, 128);">impl</span><font color="#080808" style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255);">::</font><span style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255); color: rgb(0, 128, 128);">EventThread</span><font style="background-color: rgb(255, 255, 255);"><span style="color: rgb(8, 8, 8); font-family: Consolas, monospace; font-size: 8.3pt;">::InterceptVSyncsCallback());<br /></span><span style="font-size: 11.0667px;"><i style=""><font face="consolas" style="" color="#ff3333">    // createConnection 这个函数在 SurfaceFlinger 中调用了两次，一次是创建 "app" 的 Connection，<br />    // 一次是创建 "sf" 的 Connection，可以理解为创建了两套连接，一套给 app 使用，<br />    // 一套给 surfaceFlinger 使用，SF 用 connectionName 以及 id 来标识两套连接，<br />    // * id=0 时，connectionName 的值为 “app”<br />    // * id=1 时，connectionName 的值为 “appsf”<br /></font></i></span><span style="color: rgb(8, 8, 8); font-family: Consolas, monospace; font-size: 8.3pt;">    </span></font><span style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255); color: rgb(102, 14, 122);">mSfConnectionHandle </span><font color="#080808" style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255);">=<br />            </font><span style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255); color: rgb(102, 14, 122);">mScheduler</span><span style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255); color: rgb(0, 128, 128);">-&gt;</span><font color="#080808" style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255);">createConnection(</font><span style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255); color: rgb(6, 125, 23);">"appSf"</span><font color="#080808" style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255);">, </font><span style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255); color: rgb(102, 14, 122);">mFrameTimeline</span><span style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255); color: rgb(0, 128, 128);">-&gt;</span><font color="#080808" style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255);">getTokenManager(),<br />                                         </font><span style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255); color: rgb(140, 140, 140); font-style: italic;">/*workDuration=*/</span><span style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255); color: rgb(0, 128, 128);">std</span><font color="#080808" style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255);">::</font><span style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255); color: rgb(0, 128, 128);">chrono</span><font color="#080808" style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255);">::nanoseconds(</font><span style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255); color: rgb(0, 0, 0);">vsyncPeriod</span><font color="#080808" style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255);">),<br />                                         </font><span style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255); color: rgb(140, 140, 140); font-style: italic;">/*readyDuration=*/</span><span style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255); color: rgb(0, 0, 0);">configs</span><font color="#080808" style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255);">.</font><span style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255); color: rgb(102, 14, 122);">late</span><font color="#080808" style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255);">.</font><span style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255); color: rgb(102, 14, 122);">sfWorkDuration</span><font color="#080808" style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255);">,<br />                                         [</font><span style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255); color: rgb(0, 51, 179);">this</span><font color="#080808" style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255);">](</font><span style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255); color: rgb(55, 31, 128);">nsecs_t </span><font color="#080808" style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255);">timestamp) {<br />                                             </font><span style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255); color: rgb(102, 14, 122);">mInterceptor</span><span style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255); color: rgb(0, 128, 128);">-&gt;</span><font color="#080808" style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255);">saveVSyncEvent(timestamp);<br />                                         });<br /><br />    </font><span style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255); color: rgb(102, 14, 122);">mEventQueue</span><span style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255); color: rgb(0, 128, 128);">-&gt;</span><font color="#080808" style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255);">initVsync(</font><span style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255); color: rgb(102, 14, 122);">mScheduler</span><span style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255); color: rgb(0, 128, 128);">-&gt;</span><font color="#080808" style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255);">getVsyncDispatch(), *</font><span style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255); color: rgb(102, 14, 122);">mFrameTimeline</span><span style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255); color: rgb(0, 128, 128);">-&gt;</span><font color="#080808" style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255);">getTokenManager(),<br />                           </font><span style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255); color: rgb(0, 0, 0);">configs</span><font color="#080808" style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255);">.</font><span style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255); color: rgb(102, 14, 122);">late</span><font color="#080808" style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255);">.</font><span style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255); color: rgb(102, 14, 122);">sfWorkDuration</span><font color="#080808" style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255);">);<br /><br />    </font><span style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255); color: rgb(102, 14, 122);">mRegionSamplingThread </span><span style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255); color: rgb(0, 128, 128);">=<br /></span><span style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255); color: rgb(0, 128, 128);">            </span><span style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255); color: rgb(0, 51, 179);">new </span><font color="#080808" style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255);">RegionSamplingThread(*</font><span style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255); color: rgb(0, 51, 179);">this</span><font color="#080808" style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255);">, </font><span style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255); color: rgb(0, 128, 128);">RegionSamplingThread</span><font color="#080808" style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255);">::EnvironmentTimingTunables());<br />    </font><span style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255); color: rgb(102, 14, 122);">mFpsReporter </span><span style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255); color: rgb(0, 128, 128);">= </span><span style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255); color: rgb(0, 51, 179);">new </span><font color="#080808" style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255);">FpsReporter(</font><span style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255); color: rgb(0, 128, 128);">*</span><span style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255); color: rgb(102, 14, 122);">mFrameTimeline</span><font color="#080808" style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255);">, *</font><span style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255); color: rgb(0, 51, 179);">this</span><font color="#080808" style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255);">);<br />    </font><span style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255); color: rgb(140, 140, 140); font-style: italic;">// Dispatch a mode change request for the primary display on scheduler<br /></span><span style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255); color: rgb(140, 140, 140); font-style: italic;">    // initialization, so that the EventThreads always contain a reference to a<br /></span><span style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255); color: rgb(140, 140, 140); font-style: italic;">    // prior configuration.<br /></span><span style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255); color: rgb(140, 140, 140); font-style: italic;">    //<br /></span><span style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255); color: rgb(140, 140, 140); font-style: italic;">    // This is a bit hacky, but this avoids a back-pointer into the main SF<br /></span><span style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255); color: rgb(140, 140, 140); font-style: italic;">    // classes from EventThread, and there should be no run-time binder cost<br /></span><span style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255); color: rgb(140, 140, 140); font-style: italic;">    // anyway since there are no connected apps at this point.<br /></span><span style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255); color: rgb(140, 140, 140); font-style: italic;">    </span><span style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255); color: rgb(102, 14, 122);">mScheduler</span><span style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255); color: rgb(0, 128, 128);">-&gt;</span><font color="#080808" style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255);">onPrimaryDisplayModeChanged(</font><span style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255); color: rgb(102, 14, 122);">mAppConnectionHandle</span><font color="#080808" style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255);">, display</font><span style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255); color: rgb(0, 128, 128);">-&gt;</span><font color="#080808" style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255);">getActiveMode());<br />    </font><span style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255); color: rgb(0, 51, 179);">static auto </span><span style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255); color: rgb(0, 0, 0);">ignorePresentFences </span><font color="#080808" style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255);">=<br />            base::GetBoolProperty(</font><span style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255); color: rgb(6, 125, 23);">"debug.sf.vsync_reactor_ignore_present_fences"</span><font color="#080808" style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255);">s, </font><span style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255); color: rgb(0, 51, 179);">false</span><font color="#080808" style="font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 255, 255);">);<br />    mScheduler-&gt;setIgnorePresentFences(<br />            ignorePresentFences ||<br />            getHwComposer().hasCapability(hal::Capability::PRESENT_FENCE_IS_NOT_RELIABLE));<br />}</font></pre></div></div></pre></pre></pre></pre></div></div></div></foreignObject><text x="795" y="1782" fill="rgb(0, 0, 0)" font-family="Courier New" font-size="12px">// aosp_android-12.1.0_r2\frameworks\native\services\surfaceflinger\SurfaceFlinger.cpp...</text></switch></g><rect x="1550" y="1770" width="660" height="250" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 657px; height: 1px; padding-top: 1770px; margin-left: 1555px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: &quot;Courier New&quot;; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><pre style=""><pre style=""><pre style=""><pre style=""><div style="line-height: 16px;"><div style=""><pre style=""><pre style=""><font face="Consolas, monospace" color="#cccccc" style="background-color: rgb(255, 255, 255);"><span style="font-size: 11.0667px;">// aosp_android-12.1.0_r2\frameworks\native\services\surfaceflinger\Scheduler\Scheduler.cpp</span><span style="font-size: 8.3pt;"><br /></span></font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 128, 128); font-family: Consolas, monospace; font-size: 8.3pt;">Scheduler</span><font color="#080808" face="Consolas, monospace" style="background-color: rgb(255, 255, 255);"><span style="font-size: 8.3pt;">::</span></font><span style="background-color: rgb(255, 255, 255); color: rgb(55, 31, 128); font-family: Consolas, monospace; font-size: 8.3pt;">ConnectionHandle </span><span style="background-color: rgb(255, 255, 255); color: rgb(0, 128, 128); font-family: Consolas, monospace; font-size: 8.3pt;">Scheduler</span><font color="#080808" face="Consolas, monospace" style="background-color: rgb(255, 255, 255);"><span style="font-size: 8.3pt;">::</span></font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 98, 122); font-family: Consolas, monospace; font-size: 8.3pt;">createConnection</span><font color="#080808" face="Consolas, monospace" style="background-color: rgb(255, 255, 255);"><span style="font-size: 8.3pt;">(<br />        </span></font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 51, 179); font-family: Consolas, monospace; font-size: 8.3pt;">const char</span><font color="#080808" face="Consolas, monospace" style="background-color: rgb(255, 255, 255);"><span style="font-size: 8.3pt;">* connectionName, </span></font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 128, 128); font-family: Consolas, monospace; font-size: 8.3pt;">frametimeline</span><font color="#080808" face="Consolas, monospace" style="background-color: rgb(255, 255, 255);"><span style="font-size: 8.3pt;">::</span></font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 128, 128); font-family: Consolas, monospace; font-size: 8.3pt;">TokenManager</span><font color="#080808" face="Consolas, monospace" style="background-color: rgb(255, 255, 255);"><span style="font-size: 8.3pt;">* tokenManager,<br />        </span></font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 128, 128); font-family: Consolas, monospace; font-size: 8.3pt;">std</span><font color="#080808" face="Consolas, monospace" style="background-color: rgb(255, 255, 255);"><span style="font-size: 8.3pt;">::</span></font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 128, 128); font-family: Consolas, monospace; font-size: 8.3pt;">chrono</span><font color="#080808" face="Consolas, monospace" style="background-color: rgb(255, 255, 255);"><span style="font-size: 8.3pt;">::</span></font><span style="background-color: rgb(255, 255, 255); color: rgb(55, 31, 128); font-family: Consolas, monospace; font-size: 8.3pt;">nanoseconds </span><font color="#080808" face="Consolas, monospace" style="background-color: rgb(255, 255, 255);"><span style="font-size: 8.3pt;">workDuration, </span></font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 128, 128); font-family: Consolas, monospace; font-size: 8.3pt;">std</span><font color="#080808" face="Consolas, monospace" style="background-color: rgb(255, 255, 255);"><span style="font-size: 8.3pt;">::</span></font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 128, 128); font-family: Consolas, monospace; font-size: 8.3pt;">chrono</span><font color="#080808" face="Consolas, monospace" style="background-color: rgb(255, 255, 255);"><span style="font-size: 8.3pt;">::</span></font><span style="background-color: rgb(255, 255, 255); color: rgb(55, 31, 128); font-family: Consolas, monospace; font-size: 8.3pt;">nanoseconds </span><font color="#080808" face="Consolas, monospace" style="background-color: rgb(255, 255, 255);"><span style="font-size: 8.3pt;">readyDuration,<br />        </span></font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 128, 128); font-family: Consolas, monospace; font-size: 8.3pt;">impl</span><font color="#080808" face="Consolas, monospace" style="background-color: rgb(255, 255, 255);"><span style="font-size: 8.3pt;">::</span></font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 128, 128); font-family: Consolas, monospace; font-size: 8.3pt;">EventThread</span><font color="#080808" face="Consolas, monospace" style="background-color: rgb(255, 255, 255);"><span style="font-size: 8.3pt;">::</span></font><span style="background-color: rgb(255, 255, 255); color: rgb(55, 31, 128); font-family: Consolas, monospace; font-size: 8.3pt;">InterceptVSyncsCallback </span><font color="#080808" face="Consolas, monospace" style="background-color: rgb(255, 255, 255);"><span style="font-size: 8.3pt;">interceptCallback) {<br />    </span></font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 51, 179); font-family: Consolas, monospace; font-size: 8.3pt;">auto </span><span style="background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-family: Consolas, monospace; font-size: 8.3pt;">vsyncSource </span><font color="#080808" face="Consolas, monospace" style="background-color: rgb(255, 255, 255);"><span style="font-size: 8.3pt;">= makePrimaryDispSyncSource(connectionName, workDuration, readyDuration);<br />    </span></font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 51, 179); font-family: Consolas, monospace; font-size: 8.3pt;">auto </span><span style="background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-family: Consolas, monospace; font-size: 8.3pt;">throttleVsync </span><font color="#080808" face="Consolas, monospace" style=""><span style="font-size: 8.3pt;"><span style="background-color: rgb(255, 255, 255);">= </span><span style="background-color: rgb(204, 204, 204);">makeThrottleVsyncCallback</span><span style="background-color: rgb(255, 255, 255);">();<br />    </span></span></font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 51, 179); font-family: Consolas, monospace; font-size: 8.3pt;">auto </span><span style="background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-family: Consolas, monospace; font-size: 8.3pt;">getVsyncPeriod </span><font color="#080808" face="Consolas, monospace" style="background-color: rgb(255, 255, 255);"><span style="font-size: 8.3pt;">= makeGetVsyncPeriodFunction();<br />    </span></font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 51, 179); font-family: Consolas, monospace; font-size: 8.3pt;">auto </span><span style="background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-family: Consolas, monospace; font-size: 8.3pt;">eventThread </span><font color="#080808" face="Consolas, monospace" style="background-color: rgb(255, 255, 255);"><span style="font-size: 8.3pt;">= </span></font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 128, 128); font-family: Consolas, monospace; font-size: 8.3pt;">std</span><font color="#080808" face="Consolas, monospace" style=""><span style="font-size: 8.3pt;"><span style="background-color: rgb(255, 255, 255);">::</span><span style="background-color: rgb(204, 204, 204);">make_unique&lt;</span></span></font><span style="background-color: rgb(204, 204, 204);"><span style="color: rgb(0, 128, 128); font-family: Consolas, monospace; font-size: 8.3pt;">impl</span><font color="#080808" face="Consolas, monospace" style=""><span style="font-size: 8.3pt;">::</span></font><span style="color: rgb(0, 128, 128); font-family: Consolas, monospace; font-size: 8.3pt;">EventThread</span></span><font color="#080808" face="Consolas, monospace" style=""><span style="font-size: 8.3pt;"><span style="background-color: rgb(204, 204, 204);">&gt;</span><span style="background-color: rgb(255, 255, 255);">(</span></span></font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 128, 128); font-family: Consolas, monospace; font-size: 8.3pt;">std</span><font color="#080808" face="Consolas, monospace" style="background-color: rgb(255, 255, 255);"><span style="font-size: 8.3pt;">::move(</span></font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-family: Consolas, monospace; font-size: 8.3pt;">vsyncSource</span><font color="#080808" face="Consolas, monospace" style="background-color: rgb(255, 255, 255);"><span style="font-size: 8.3pt;">), tokenManager,<br />                                                           </span></font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 128, 128); font-family: Consolas, monospace; font-size: 8.3pt;">std</span><font color="#080808" face="Consolas, monospace" style="background-color: rgb(255, 255, 255);"><span style="font-size: 8.3pt;">::move(interceptCallback),<br />                                                           </span></font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 128, 128); font-family: Consolas, monospace; font-size: 8.3pt;">std</span><font color="#080808" face="Consolas, monospace" style="background-color: rgb(255, 255, 255);"><span style="font-size: 8.3pt;">::move(</span></font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-family: Consolas, monospace; font-size: 8.3pt;">throttleVsync</span><font color="#080808" face="Consolas, monospace" style="background-color: rgb(255, 255, 255);"><span style="font-size: 8.3pt;">),<br />                                                           </span></font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 128, 128); font-family: Consolas, monospace; font-size: 8.3pt;">std</span><font color="#080808" face="Consolas, monospace" style="background-color: rgb(255, 255, 255);"><span style="font-size: 8.3pt;">::move(</span></font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-family: Consolas, monospace; font-size: 8.3pt;">getVsyncPeriod</span><font color="#080808" face="Consolas, monospace" style="background-color: rgb(255, 255, 255);"><span style="font-size: 8.3pt;">));<br />    </span></font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 51, 179); font-family: Consolas, monospace; font-size: 8.3pt;">return </span><span style="color: rgb(0, 0, 0); font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(204, 204, 204);">createConnection</span><font color="#080808" face="Consolas, monospace" style="background-color: rgb(255, 255, 255);"><span style="font-size: 8.3pt;">(</span></font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 128, 128); font-family: Consolas, monospace; font-size: 8.3pt;">std</span><font color="#080808" face="Consolas, monospace" style="background-color: rgb(255, 255, 255);"><span style="font-size: 8.3pt;">::move(</span></font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-family: Consolas, monospace; font-size: 8.3pt;">eventThread</span><font color="#080808" face="Consolas, monospace" style="background-color: rgb(255, 255, 255);"><span style="font-size: 8.3pt;">));<br />}</span></font></pre></pre></div></div></pre></pre></pre></pre></div></div></div></foreignObject><text x="1555" y="1782" fill="rgb(0, 0, 0)" font-family="Courier New" font-size="12px">// aosp_android-12.1.0_r2\frameworks\native\services\surfaceflinger\Scheduler\Scheduler.cppScheduler::Connecti...</text></switch></g><path d="M 1050 2145 Q 1080 2145 1300 1957.5 Q 1520 1770 1543.63 1770" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 1548.88 1770 L 1541.88 1773.5 L 1543.63 1770 L 1541.88 1766.5 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><ellipse cx="1045" cy="2145" rx="5" ry="5" fill="#000000" stroke="none" pointer-events="all"/><rect x="2270" y="1770" width="650" height="630" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 647px; height: 1px; padding-top: 1770px; margin-left: 2275px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: &quot;Courier New&quot;; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><pre style=""><pre style=""><pre style=""><pre style=""><div style="line-height: 16px;"><div style=""><pre style=""><pre style=""><pre style="background-color: rgb(255, 255, 255);"><font face="Consolas, monospace" color="#cccccc"><span style="font-size: 11.0667px;">// aosp_android-12.1.0_r2\frameworks\native\services\surfaceflinger\Scheduler\EventThread.cpp</span><span style="font-size: 8.3pt;"><br /></span></font><span style="color: rgb(0, 128, 128); font-family: Consolas, monospace; font-size: 8.3pt;">EventThread</span><font color="#080808" face="Consolas, monospace"><span style="font-size: 8.3pt;">::</span></font><span style="color: rgb(0, 98, 122); font-family: Consolas, monospace; font-size: 8.3pt;">EventThread</span><font color="#080808" face="Consolas, monospace"><span style="font-size: 8.3pt;">(</span></font><span style="color: rgb(0, 128, 128); font-family: Consolas, monospace; font-size: 8.3pt;">std</span><font color="#080808" face="Consolas, monospace"><span style="font-size: 8.3pt;">::</span></font><span style="color: rgb(0, 128, 128); font-family: Consolas, monospace; font-size: 8.3pt;">unique_ptr</span><font color="#080808" face="Consolas, monospace"><span style="font-size: 8.3pt;">&lt;</span></font><span style="color: rgb(0, 128, 128); font-family: Consolas, monospace; font-size: 8.3pt;">VSyncSource</span><font color="#080808" face="Consolas, monospace"><span style="font-size: 8.3pt;">&gt; vsyncSource,<br />                         </span></font><span style="color: rgb(0, 128, 128); font-family: Consolas, monospace; font-size: 8.3pt;">android</span><font color="#080808" face="Consolas, monospace"><span style="font-size: 8.3pt;">::</span></font><span style="color: rgb(0, 128, 128); font-family: Consolas, monospace; font-size: 8.3pt;">frametimeline</span><font color="#080808" face="Consolas, monospace"><span style="font-size: 8.3pt;">::</span></font><span style="color: rgb(0, 128, 128); font-family: Consolas, monospace; font-size: 8.3pt;">TokenManager</span><font color="#080808" face="Consolas, monospace"><span style="font-size: 8.3pt;">* tokenManager,<br />                         </span></font><span style="color: rgb(55, 31, 128); font-family: Consolas, monospace; font-size: 8.3pt;">InterceptVSyncsCallback </span><font color="#080808" face="Consolas, monospace"><span style="font-size: 8.3pt;">interceptVSyncsCallback,<br />                         </span></font><span style="color: rgb(55, 31, 128); font-family: Consolas, monospace; font-size: 8.3pt;">ThrottleVsyncCallback </span><font color="#080808" face="Consolas, monospace"><span style="font-size: 8.3pt;">throttleVsyncCallback,<br />                         </span></font><span style="color: rgb(55, 31, 128); font-family: Consolas, monospace; font-size: 8.3pt;">GetVsyncPeriodFunction </span><font color="#080808" face="Consolas, monospace"><span style="font-size: 8.3pt;">getVsyncPeriodFunction)<br />      : </span></font><span style="color: rgb(102, 14, 122); font-family: Consolas, monospace; font-size: 8.3pt;">mVSyncSource</span><font color="#080808" face="Consolas, monospace"><span style="font-size: 8.3pt;">(</span></font><span style="color: rgb(0, 128, 128); font-family: Consolas, monospace; font-size: 8.3pt;">std</span><font color="#080808" face="Consolas, monospace"><span style="font-size: 8.3pt;">::move(vsyncSource)),<br />        </span></font><span style="color: rgb(102, 14, 122); font-family: Consolas, monospace; font-size: 8.3pt;">mTokenManager</span><font color="#080808" face="Consolas, monospace"><span style="font-size: 8.3pt;">(tokenManager),<br />        </span></font><span style="color: rgb(102, 14, 122); font-family: Consolas, monospace; font-size: 8.3pt;">mInterceptVSyncsCallback</span><font color="#080808" face="Consolas, monospace"><span style="font-size: 8.3pt;">(</span></font><span style="color: rgb(0, 128, 128); font-family: Consolas, monospace; font-size: 8.3pt;">std</span><font color="#080808" face="Consolas, monospace"><span style="font-size: 8.3pt;">::move(interceptVSyncsCallback)),<br />        </span></font><span style="color: rgb(102, 14, 122); font-family: Consolas, monospace; font-size: 8.3pt;">mThrottleVsyncCallback</span><font color="#080808" face="Consolas, monospace"><span style="font-size: 8.3pt;">(</span></font><span style="color: rgb(0, 128, 128); font-family: Consolas, monospace; font-size: 8.3pt;">std</span><font color="#080808" face="Consolas, monospace"><span style="font-size: 8.3pt;">::move(throttleVsyncCallback)),<br />        </span></font><span style="color: rgb(102, 14, 122); font-family: Consolas, monospace; font-size: 8.3pt;">mGetVsyncPeriodFunction</span><font color="#080808" face="Consolas, monospace"><span style="font-size: 8.3pt;">(</span></font><span style="color: rgb(0, 128, 128); font-family: Consolas, monospace; font-size: 8.3pt;">std</span><font color="#080808" face="Consolas, monospace"><span style="font-size: 8.3pt;">::move(getVsyncPeriodFunction)),<br />        </span></font><span style="color: rgb(102, 14, 122); font-family: Consolas, monospace; font-size: 8.3pt;">mThreadName</span><font color="#080808" face="Consolas, monospace"><span style="font-size: 8.3pt;">(</span></font><span style="color: rgb(102, 14, 122); font-family: Consolas, monospace; font-size: 8.3pt;">mVSyncSource</span><span style="color: rgb(0, 128, 128); font-family: Consolas, monospace; font-size: 8.3pt;">-&gt;</span><font color="#080808" face="Consolas, monospace"><span style="font-size: 8.3pt;">getName()) {<br /><br />    </span></font><span style="color: rgb(31, 84, 46); font-family: Consolas, monospace; font-size: 8.3pt; font-weight: bold;">LOG_ALWAYS_FATAL_IF</span><font color="#080808" face="Consolas, monospace"><span style="font-size: 8.3pt;">(getVsyncPeriodFunction </span></font><span style="color: rgb(0, 128, 128); font-family: Consolas, monospace; font-size: 8.3pt;">== </span><span style="color: rgb(0, 51, 179); font-family: Consolas, monospace; font-size: 8.3pt;">nullptr</span><font color="#080808" face="Consolas, monospace"><span style="font-size: 8.3pt;">,<br />            </span></font><span style="color: rgb(6, 125, 23); font-family: Consolas, monospace; font-size: 8.3pt;">"getVsyncPeriodFunction must not be null"</span><span style="font-family: Consolas, monospace; color: rgb(8, 8, 8); font-size: 8.3pt;">);<br /></span><span style="font-size: 11.0667px;"><font color="#ff3333" style="" face="consolas"><i style="">    // EventThread 对象是 VSyncSource::Callback 的派生类，通过 setCallback() 方法<br />    // 将本对象设置到 mVSyncSource 对象中，监听底层 VSync 事件<br /></i></font></span><span style="font-family: Consolas, monospace; color: rgb(8, 8, 8); font-size: 8.3pt;">    </span><span style="color: rgb(102, 14, 122); font-family: Consolas, monospace; font-size: 8.3pt;">mVSyncSource</span><span style="color: rgb(0, 128, 128); font-family: Consolas, monospace; font-size: 8.3pt;">-&gt;</span><font color="#080808" face="Consolas, monospace"><span style="font-size: 8.3pt;">setCallback(</span></font><span style="color: rgb(0, 51, 179); font-family: Consolas, monospace; font-size: 8.3pt;">this</span><span style="color: rgb(8, 8, 8); font-family: Consolas, monospace; font-size: 8.3pt;">);<br /></span><span style="font-size: 11.0667px;"><font face="consolas" style="" color="#ff3333"><i style="">    // 新建线程，当底层上报 VSync 事件时，通过 wait-notify 机制唤醒该线程并在其中处理上报的 VSync 事件<br /></i></font></span><span style="color: rgb(8, 8, 8); font-family: Consolas, monospace; font-size: 8.3pt;">    </span><span style="color: rgb(102, 14, 122); font-family: Consolas, monospace; font-size: 8.3pt;">mThread </span><span style="color: rgb(0, 128, 128); font-family: Consolas, monospace; font-size: 8.3pt;">= std</span><font color="#080808" face="Consolas, monospace"><span style="font-size: 8.3pt;">::thread([</span></font><span style="color: rgb(0, 51, 179); font-family: Consolas, monospace; font-size: 8.3pt;">this</span><font color="#080808" face="Consolas, monospace"><span style="font-size: 8.3pt;">]() </span></font><span style="color: rgb(31, 84, 46); font-family: Consolas, monospace; font-size: 8.3pt; font-weight: bold;">NO_THREAD_SAFETY_ANALYSIS </span><font color="#080808" face="Consolas, monospace"><span style="font-size: 8.3pt;">{<br />        </span></font><span style="color: rgb(0, 128, 128); font-family: Consolas, monospace; font-size: 8.3pt;">std</span><font color="#080808" face="Consolas, monospace"><span style="font-size: 8.3pt;">::</span></font><span style="color: rgb(0, 128, 128); font-family: Consolas, monospace; font-size: 8.3pt;">unique_lock</span><font color="#080808" face="Consolas, monospace"><span style="font-size: 8.3pt;">&lt;</span></font><span style="color: rgb(0, 128, 128); font-family: Consolas, monospace; font-size: 8.3pt;">std</span><font color="#080808" face="Consolas, monospace"><span style="font-size: 8.3pt;">::</span></font><span style="color: rgb(0, 128, 128); font-family: Consolas, monospace; font-size: 8.3pt;">mutex</span><font color="#080808" face="Consolas, monospace"><span style="font-size: 8.3pt;">&gt; </span></font><span style="color: rgb(0, 0, 0); font-family: Consolas, monospace; font-size: 8.3pt;">lock</span><font color="#080808" face="Consolas, monospace"><span style="font-size: 8.3pt;">(</span></font><span style="color: rgb(102, 14, 122); font-family: Consolas, monospace; font-size: 8.3pt;">mMutex</span><font color="#080808" face="Consolas, monospace"><span style="font-size: 8.3pt;">);<br />        threadMain(</span></font><span style="color: rgb(0, 0, 0); font-family: Consolas, monospace; font-size: 8.3pt;">lock</span><span style="font-family: Consolas, monospace; color: rgb(8, 8, 8); font-size: 8.3pt;">);<br />    });<br /></span><span style="font-size: 11.0667px;"><font color="#ff3333" style="" face="consolas"><i>    // 设置线程名称为 “app”<br /></i></font></span><span style="font-family: Consolas, monospace; color: rgb(8, 8, 8); font-size: 8.3pt;">    pthread_setname_np(</span><span style="color: rgb(102, 14, 122); font-family: Consolas, monospace; font-size: 8.3pt;">mThread</span><font color="#080808" face="Consolas, monospace"><span style="font-size: 8.3pt;">.native_handle(), </span></font><span style="color: rgb(102, 14, 122); font-family: Consolas, monospace; font-size: 8.3pt;">mThreadName</span><font color="#080808" face="Consolas, monospace"><span style="font-size: 8.3pt;">);<br /><br />    </span></font><span style="color: rgb(55, 31, 128); font-family: Consolas, monospace; font-size: 8.3pt;">pid_t </span><span style="color: rgb(0, 0, 0); font-family: Consolas, monospace; font-size: 8.3pt;">tid </span><font color="#080808" face="Consolas, monospace"><span style="font-size: 8.3pt;">= pthread_gettid_np(</span></font><span style="color: rgb(102, 14, 122); font-family: Consolas, monospace; font-size: 8.3pt;">mThread</span><font color="#080808" face="Consolas, monospace"><span style="font-size: 8.3pt;">.native_handle());<br /><br />    </span></font><span style="color: rgb(140, 140, 140); font-family: Consolas, monospace; font-size: 8.3pt; font-style: italic;">// Use SCHED_FIFO to minimize jitter<br /></span><span style="color: rgb(140, 140, 140); font-family: Consolas, monospace; font-size: 8.3pt; font-style: italic;">    </span><span style="color: rgb(0, 51, 179); font-family: Consolas, monospace; font-size: 8.3pt;">constexpr int </span><span style="color: rgb(0, 0, 0); font-family: Consolas, monospace; font-size: 8.3pt;">EVENT_THREAD_PRIORITY </span><font color="#080808" face="Consolas, monospace"><span style="font-size: 8.3pt;">= </span></font><span style="color: rgb(23, 80, 235); font-family: Consolas, monospace; font-size: 8.3pt;">2</span><font color="#080808" face="Consolas, monospace"><span style="font-size: 8.3pt;">;<br />    </span></font><span style="color: rgb(0, 51, 179); font-family: Consolas, monospace; font-size: 8.3pt;">struct </span><span style="color: rgb(0, 128, 128); font-family: Consolas, monospace; font-size: 8.3pt;">sched_param </span><span style="color: rgb(0, 0, 0); font-family: Consolas, monospace; font-size: 8.3pt;">param </span><font color="#080808" face="Consolas, monospace"><span style="font-size: 8.3pt;">= {</span></font><span style="color: rgb(23, 80, 235); font-family: Consolas, monospace; font-size: 8.3pt;">0</span><font color="#080808" face="Consolas, monospace"><span style="font-size: 8.3pt;">};<br />    </span></font><span style="color: rgb(0, 0, 0); font-family: Consolas, monospace; font-size: 8.3pt;">param</span><font color="#080808" face="Consolas, monospace"><span style="font-size: 8.3pt;">.</span></font><span style="color: rgb(102, 14, 122); font-family: Consolas, monospace; font-size: 8.3pt;">sched_priority </span><font color="#080808" face="Consolas, monospace"><span style="font-size: 8.3pt;">= </span></font><span style="color: rgb(0, 0, 0); font-family: Consolas, monospace; font-size: 8.3pt;">EVENT_THREAD_PRIORITY</span><font color="#080808" face="Consolas, monospace"><span style="font-size: 8.3pt;">;<br />    </span></font><span style="color: rgb(0, 51, 179); font-family: Consolas, monospace; font-size: 8.3pt;">if </span><font color="#080808" face="Consolas, monospace"><span style="font-size: 8.3pt;">(pthread_setschedparam(</span></font><span style="color: rgb(102, 14, 122); font-family: Consolas, monospace; font-size: 8.3pt;">mThread</span><font color="#080808" face="Consolas, monospace"><span style="font-size: 8.3pt;">.native_handle(), </span></font><span style="color: rgb(31, 84, 46); font-family: Consolas, monospace; font-size: 8.3pt; font-weight: bold;">SCHED_FIFO</span><font color="#080808" face="Consolas, monospace"><span style="font-size: 8.3pt;">, &amp;</span></font><span style="color: rgb(0, 0, 0); font-family: Consolas, monospace; font-size: 8.3pt;">param</span><font color="#080808" face="Consolas, monospace"><span style="font-size: 8.3pt;">) != </span></font><span style="color: rgb(23, 80, 235); font-family: Consolas, monospace; font-size: 8.3pt;">0</span><font color="#080808" face="Consolas, monospace"><span style="font-size: 8.3pt;">) {<br />        </span></font><span style="color: rgb(31, 84, 46); font-family: Consolas, monospace; font-size: 8.3pt; font-weight: bold;">ALOGE</span><font color="#080808" face="Consolas, monospace"><span style="font-size: 8.3pt;">(</span></font><span style="color: rgb(6, 125, 23); font-family: Consolas, monospace; font-size: 8.3pt;">"Couldn't set SCHED_FIFO for EventThread"</span><font color="#080808" face="Consolas, monospace"><span style="font-size: 8.3pt;">);<br />    }<br /><br />    set_sched_policy(</span></font><span style="color: rgb(0, 0, 0); font-family: Consolas, monospace; font-size: 8.3pt;">tid</span><font color="#080808" face="Consolas, monospace"><span style="font-size: 8.3pt;">, SP_FOREGROUND);<br />}</span></font></pre></pre></pre></div></div></pre></pre></pre></pre></div></div></div></foreignObject><text x="2275" y="1782" fill="rgb(0, 0, 0)" font-family="Courier New" font-size="12px">// aosp_android-12.1.0_r2\frameworks\native\services\surfaceflinger\Scheduler\EventThread.cppEventThread::Ev...</text></switch></g><path d="M 1940 1915 Q 1970 1915 2105 1842.5 Q 2240 1770 2263.63 1770" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 2268.88 1770 L 2261.88 1773.5 L 2263.63 1770 L 2261.88 1766.5 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><ellipse cx="1935" cy="1915" rx="5" ry="5" fill="#000000" stroke="none" pointer-events="all"/><rect x="2270" y="2430" width="680" height="250" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 677px; height: 1px; padding-top: 2430px; margin-left: 2275px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: &quot;Courier New&quot;; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><pre style=""><pre style=""><pre style=""><pre style=""><div style="line-height: 16px;"><div style=""><pre style=""><pre style=""><pre style=""><font face="Consolas, monospace" color="#cccccc" style="background-color: rgb(255, 255, 255);"><span style="font-size: 11.0667px;">// aosp_android-12.1.0_r2\frameworks\native\services\surfaceflinger\Scheduler\Scheduler.cpp</span><span style="font-size: 8.3pt;"><br /></span></font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 128, 128); font-family: Consolas, monospace; font-size: 8.3pt;">Scheduler</span><font color="#080808" face="Consolas, monospace" style="background-color: rgb(255, 255, 255);"><span style="font-size: 8.3pt;">::</span></font><span style="background-color: rgb(255, 255, 255); color: rgb(55, 31, 128); font-family: Consolas, monospace; font-size: 8.3pt;">ConnectionHandle </span><span style="background-color: rgb(255, 255, 255); color: rgb(0, 128, 128); font-family: Consolas, monospace; font-size: 8.3pt;">Scheduler</span><font color="#080808" face="Consolas, monospace" style="background-color: rgb(255, 255, 255);"><span style="font-size: 8.3pt;">::</span></font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 98, 122); font-family: Consolas, monospace; font-size: 8.3pt;">createConnection</span><font color="#080808" face="Consolas, monospace" style="background-color: rgb(255, 255, 255);"><span style="font-size: 8.3pt;">(</span></font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 128, 128); font-family: Consolas, monospace; font-size: 8.3pt;">std</span><font color="#080808" face="Consolas, monospace" style="background-color: rgb(255, 255, 255);"><span style="font-size: 8.3pt;">::</span></font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 128, 128); font-family: Consolas, monospace; font-size: 8.3pt;">unique_ptr</span><font color="#080808" face="Consolas, monospace" style="background-color: rgb(255, 255, 255);"><span style="font-size: 8.3pt;">&lt;</span></font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 128, 128); font-family: Consolas, monospace; font-size: 8.3pt;">EventThread</span><span style="background-color: rgb(255, 255, 255); font-family: Consolas, monospace; color: rgb(8, 8, 8); font-size: 8.3pt;">&gt; eventThread) {<br /></span><span style="background-color: rgb(255, 255, 255); font-size: 11.0667px;"><font color="#ff3333" style="" face="consolas"><i style="">    // ConnectionHandle 是一个结构体，仅有一个 id 成员（值从0开始累加）<br />    // ConnectionHandle 结构作为 connection 对象的索引，保存在 Scheduler::mConnections 中<br /></i></font></span><span style="background-color: rgb(255, 255, 255); font-family: Consolas, monospace; color: rgb(8, 8, 8); font-size: 8.3pt;">    </span><span style="background-color: rgb(255, 255, 255); color: rgb(0, 51, 179); font-family: Consolas, monospace; font-size: 8.3pt;">const </span><span style="color: rgb(55, 31, 128); font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(255, 242, 204);">ConnectionHandle </span><span style="background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-family: Consolas, monospace; font-size: 8.3pt;">handle </span><font color="#080808" face="Consolas, monospace" style="background-color: rgb(255, 255, 255);"><span style="font-size: 8.3pt;">= ConnectionHandle{</span></font><span style="background-color: rgb(255, 255, 255); color: rgb(102, 14, 122); font-family: Consolas, monospace; font-size: 8.3pt;">mNextConnectionHandleId</span><font color="#080808" face="Consolas, monospace" style="background-color: rgb(255, 255, 255);"><span style="font-size: 8.3pt;">++};<br />    </span></font><span style="background-color: rgb(255, 255, 255); color: rgb(31, 84, 46); font-family: Consolas, monospace; font-size: 8.3pt; font-weight: bold;">ALOGV</span><font color="#080808" face="Consolas, monospace" style="background-color: rgb(255, 255, 255);"><span style="font-size: 8.3pt;">(</span></font><span style="background-color: rgb(255, 255, 255); color: rgb(6, 125, 23); font-family: Consolas, monospace; font-size: 8.3pt;">"Creating a connection handle with ID %" </span><font color="#080808" face="Consolas, monospace" style="background-color: rgb(255, 255, 255);"><span style="font-size: 8.3pt;">PRIuPTR, </span></font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-family: Consolas, monospace; font-size: 8.3pt;">handle</span><font color="#080808" face="Consolas, monospace" style="background-color: rgb(255, 255, 255);"><span style="font-size: 8.3pt;">.</span></font><span style="background-color: rgb(255, 255, 255); color: rgb(102, 14, 122); font-family: Consolas, monospace; font-size: 8.3pt;">id</span><font color="#080808" face="Consolas, monospace" style="background-color: rgb(255, 255, 255);"><span style="font-size: 8.3pt;">);<br /><br />    </span></font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 51, 179); font-family: Consolas, monospace; font-size: 8.3pt;">auto </span><span style="background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-family: Consolas, monospace; font-size: 8.3pt;">connection </span><font color="#080808" face="Consolas, monospace" style=""><span style="font-size: 8.3pt;"><span style="background-color: rgb(255, 255, 255);">= </span><span style="background-color: rgb(204, 204, 204);">createConnectionInternal</span><span style="background-color: rgb(255, 255, 255);">(eventThread.get());<br /><br />    </span></span></font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 128, 128); font-family: Consolas, monospace; font-size: 8.3pt;">std</span><font color="#080808" face="Consolas, monospace" style="background-color: rgb(255, 255, 255);"><span style="font-size: 8.3pt;">::</span></font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 128, 128); font-family: Consolas, monospace; font-size: 8.3pt;">lock_guard</span><font color="#080808" face="Consolas, monospace" style="background-color: rgb(255, 255, 255);"><span style="font-size: 8.3pt;">&lt;</span></font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 128, 128); font-family: Consolas, monospace; font-size: 8.3pt;">std</span><font color="#080808" face="Consolas, monospace" style="background-color: rgb(255, 255, 255);"><span style="font-size: 8.3pt;">::</span></font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 128, 128); font-family: Consolas, monospace; font-size: 8.3pt;">mutex</span><font color="#080808" face="Consolas, monospace" style="background-color: rgb(255, 255, 255);"><span style="font-size: 8.3pt;">&gt; </span></font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-family: Consolas, monospace; font-size: 8.3pt;">lock</span><font color="#080808" face="Consolas, monospace" style="background-color: rgb(255, 255, 255);"><span style="font-size: 8.3pt;">(</span></font><span style="background-color: rgb(255, 255, 255); color: rgb(102, 14, 122); font-family: Consolas, monospace; font-size: 8.3pt;">mConnectionsLock</span><font style=""><span style="background-color: rgb(255, 255, 255); font-size: 8.3pt;"><font face="Consolas, monospace" style="color: rgb(8, 8, 8);">);<br /></font><i style=""><font face="consolas" style="" color="#ff3333">    // 保存到 </font></i></span><span style="font-size: 11.0667px;"><i style=""><font face="consolas" color="#ff3333" style=""><span style="background-color: rgb(255, 255, 255);">unordered_map 中，根据客户端传入的 </span><span style="background-color: rgb(255, 242, 204);">VSync 类型值</span><span style="background-color: rgb(255, 255, 255);">索引对应的 connection 对象</span></font></i></span><span style="background-color: rgb(255, 255, 255); font-size: 8.3pt;"><i style=""><font face="consolas" style="" color="#ff3333"><br /></font></i><font face="Consolas, monospace" style="color: rgb(8, 8, 8);">    mConnections.emplace(handle, Connection{connection, std::move(eventThread)});<br />    </font></span></font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 51, 179); font-family: Consolas, monospace; font-size: 8.3pt;">return </span><span style="background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-family: Consolas, monospace; font-size: 8.3pt;">handle</span><font color="#080808" face="Consolas, monospace" style="background-color: rgb(255, 255, 255);"><span style="font-size: 8.3pt;">;<br />}</span></font></pre></pre></pre></div></div></pre></pre></pre></pre></div></div></div></foreignObject><text x="2275" y="2442" fill="rgb(0, 0, 0)" font-family="Courier New" font-size="12px">// aosp_android-12.1.0_r2\frameworks\native\services\surfaceflinger\Scheduler\Scheduler.cppScheduler::ConnectionH...</text></switch></g><path d="M 1740 1985 Q 1770 1985 2005 2207.5 Q 2240 2430 2263.63 2430" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 2268.88 2430 L 2261.88 2433.5 L 2263.63 2430 L 2261.88 2426.5 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><ellipse cx="1735" cy="1985" rx="5" ry="5" fill="#000000" stroke="none" pointer-events="all"/><path d="M 1720 2224 Q 1750 2224 2057 2369 Q 2364 2514 2387.63 2514" fill="none" stroke="#d6b656" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 2392.88 2514 L 2385.88 2517.5 L 2387.63 2514 L 2385.88 2510.5 Z" fill="#d6b656" stroke="#d6b656" stroke-miterlimit="10" pointer-events="all"/><ellipse cx="2399" cy="2514" rx="5" ry="5" fill="#d6b656" stroke="#d6b656" pointer-events="all"/><path d="M 1790 2535 Q 1820 2535 2200 2570 Q 2580 2605 2603.63 2605" fill="none" stroke="#d6b656" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 2608.88 2605 L 2601.88 2608.5 L 2603.63 2605 L 2601.88 2601.5 Z" fill="#d6b656" stroke="#d6b656" stroke-miterlimit="10" pointer-events="all"/><ellipse cx="2615" cy="2605" rx="5" ry="5" fill="#d6b656" stroke="#d6b656" pointer-events="all"/><rect x="2990" y="2430" width="650" height="120" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 647px; height: 1px; padding-top: 2430px; margin-left: 2995px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: &quot;Courier New&quot;; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><pre style=""><pre style=""><pre style=""><pre style=""><div style="line-height: 16px;"><div style=""><pre style=""><pre style=""><pre style=""><pre style=""><font face="Consolas, monospace" color="#cccccc" style="background-color: rgb(255, 255, 255);"><span style="font-size: 11.0667px;">// aosp_android-12.1.0_r2\frameworks\native\services\surfaceflinger\Scheduler\Scheduler.cpp</span><span style="font-size: 8.3pt;"><br /></span></font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 128, 128); font-family: Consolas, monospace; font-size: 8.3pt;">sp</span><font color="#080808" face="Consolas, monospace" style="background-color: rgb(255, 255, 255);"><span style="font-size: 8.3pt;">&lt;</span></font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 128, 128); font-family: Consolas, monospace; font-size: 8.3pt;">EventThreadConnection</span><font color="#080808" face="Consolas, monospace" style="background-color: rgb(255, 255, 255);"><span style="font-size: 8.3pt;">&gt; </span></font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 128, 128); font-family: Consolas, monospace; font-size: 8.3pt;">Scheduler</span><font color="#080808" face="Consolas, monospace" style="background-color: rgb(255, 255, 255);"><span style="font-size: 8.3pt;">::</span></font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 98, 122); font-family: Consolas, monospace; font-size: 8.3pt;">createConnectionInternal</span><font color="#080808" face="Consolas, monospace" style="background-color: rgb(255, 255, 255);"><span style="font-size: 8.3pt;">(<br />        </span></font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 128, 128); font-family: Consolas, monospace; font-size: 8.3pt;">EventThread</span><font color="#080808" face="Consolas, monospace" style="background-color: rgb(255, 255, 255);"><span style="font-size: 8.3pt;">* eventThread, </span></font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 128, 128); font-family: Consolas, monospace; font-size: 8.3pt;">ISurfaceComposer</span><font color="#080808" face="Consolas, monospace" style="background-color: rgb(255, 255, 255);"><span style="font-size: 8.3pt;">::</span></font><span style="background-color: rgb(255, 255, 255); color: rgb(55, 31, 128); font-family: Consolas, monospace; font-size: 8.3pt;">EventRegistrationFlags </span><span style="background-color: rgb(255, 255, 255); font-family: Consolas, monospace; color: rgb(8, 8, 8); font-size: 8.3pt;">eventRegistration) {<br /></span><span style="background-color: rgb(255, 255, 255); font-size: 11.0667px;"><font style="" face="consolas" color="#ff0000"><i>    // 参数1是一个 lamda 表达式，是一个函数对象，保存在 EventThreadConnection::resyncCallback 变量中<br /></i></font></span><span style="background-color: rgb(255, 255, 255); font-family: Consolas, monospace; color: rgb(8, 8, 8); font-size: 8.3pt;">    </span><span style="background-color: rgb(255, 255, 255); color: rgb(0, 51, 179); font-family: Consolas, monospace; font-size: 8.3pt;">return </span><font color="#080808" face="Consolas, monospace" style=""><span style="font-size: 8.3pt;"><span style="background-color: rgb(255, 255, 255);">eventThread-&gt;</span><span style="background-color: rgb(204, 204, 204);">createEventConnection</span><span style="background-color: rgb(255, 255, 255);">([&amp;] { resync(); }, eventRegistration);<br />}</span></span></font></pre></pre></pre></pre></div></div></pre></pre></pre></pre></div></div></div></foreignObject><text x="2995" y="2442" fill="rgb(0, 0, 0)" font-family="Courier New" font-size="12px">// aosp_android-12.1.0_r2\frameworks\native\services\surfaceflinger\Scheduler\Scheduler.cppsp&lt;EventThreadCon...</text></switch></g><path d="M 2570 2565 Q 2600 2565 2780 2497.5 Q 2960 2430 2983.63 2430" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 2988.88 2430 L 2981.88 2433.5 L 2983.63 2430 L 2981.88 2426.5 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><ellipse cx="2565" cy="2565" rx="5" ry="5" fill="#000000" stroke="none" pointer-events="all"/><rect x="3710" y="2430" width="640" height="150" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 637px; height: 1px; padding-top: 2430px; margin-left: 3715px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: &quot;Courier New&quot;; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><pre style=""><pre style=""><pre style=""><pre style=""><div style="line-height: 16px;"><div style=""><pre style=""><pre style=""><pre style=""><pre style=""><pre style=""><font face="Consolas, monospace" color="#cccccc" style="background-color: rgb(255, 255, 255);"><span style="font-size: 11.0667px;">// aosp_android-12.1.0_r2\frameworks\native\services\surfaceflinger\Scheduler\EventThread.cpp</span><span style="font-size: 8.3pt;"><br /></span></font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 128, 128); font-family: Consolas, monospace; font-size: 8.3pt;">sp</span><font color="#080808" face="Consolas, monospace" style="background-color: rgb(255, 255, 255);"><span style="font-size: 8.3pt;">&lt;</span></font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 128, 128); font-family: Consolas, monospace; font-size: 8.3pt;">EventThreadConnection</span><font color="#080808" face="Consolas, monospace" style="background-color: rgb(255, 255, 255);"><span style="font-size: 8.3pt;">&gt; </span></font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 128, 128); font-family: Consolas, monospace; font-size: 8.3pt;">EventThread</span><font color="#080808" face="Consolas, monospace" style="background-color: rgb(255, 255, 255);"><span style="font-size: 8.3pt;">::</span></font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 98, 122); font-family: Consolas, monospace; font-size: 8.3pt;">createEventConnection</span><font color="#080808" face="Consolas, monospace" style="background-color: rgb(255, 255, 255);"><span style="font-size: 8.3pt;">(<br />        </span></font><span style="background-color: rgb(255, 255, 255); color: rgb(55, 31, 128); font-family: Consolas, monospace; font-size: 8.3pt;">ResyncCallback </span><font color="#080808" face="Consolas, monospace" style="background-color: rgb(255, 255, 255);"><span style="font-size: 8.3pt;">resyncCallback,<br />        </span></font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 128, 128); font-family: Consolas, monospace; font-size: 8.3pt;">ISurfaceComposer</span><font color="#080808" face="Consolas, monospace" style="background-color: rgb(255, 255, 255);"><span style="font-size: 8.3pt;">::</span></font><span style="background-color: rgb(255, 255, 255); color: rgb(55, 31, 128); font-family: Consolas, monospace; font-size: 8.3pt;">EventRegistrationFlags </span><font color="#080808" face="Consolas, monospace" style="background-color: rgb(255, 255, 255);"><span style="font-size: 8.3pt;">eventRegistration) </span></font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 51, 179); font-family: Consolas, monospace; font-size: 8.3pt;">const </span><font color="#080808" face="Consolas, monospace" style="background-color: rgb(255, 255, 255);"><span style="font-size: 8.3pt;">{<br />    </span></font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 51, 179); font-family: Consolas, monospace; font-size: 8.3pt;">return new </span><font color="#080808" face="Consolas, monospace" style=""><span style="font-size: 8.3pt;"><span style="background-color: rgb(204, 204, 204);">EventThreadConnection</span><span style="background-color: rgb(255, 255, 255);">(</span></span></font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 51, 179); font-family: Consolas, monospace; font-size: 8.3pt;">const_cast</span><font color="#080808" face="Consolas, monospace" style="background-color: rgb(255, 255, 255);"><span style="font-size: 8.3pt;">&lt;EventThread*&gt;(</span></font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 51, 179); font-family: Consolas, monospace; font-size: 8.3pt;">this</span><font color="#080808" face="Consolas, monospace" style="background-color: rgb(255, 255, 255);"><span style="font-size: 8.3pt;">),<br />                                     IPCThreadState::self()-&gt;getCallingUid(),<br />                                     std::move(resyncCallback), eventRegistration);<br />}</span></font></pre></pre></pre></pre></pre></div></div></pre></pre></pre></pre></div></div></div></foreignObject><text x="3715" y="2442" fill="rgb(0, 0, 0)" font-family="Courier New" font-size="12px">// aosp_android-12.1.0_r2\frameworks\native\services\surfaceflinger\Scheduler\EventThread.cppsp&lt;EventThrea...</text></switch></g><path d="M 3280 2514 Q 3310 2514 3495 2472 Q 3680 2430 3703.63 2430" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 3708.88 2430 L 3701.88 2433.5 L 3703.63 2430 L 3701.88 2426.5 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><ellipse cx="3275" cy="2514" rx="5" ry="5" fill="#000000" stroke="none" pointer-events="all"/><rect x="4390" y="2430" width="640" height="170" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 637px; height: 1px; padding-top: 2430px; margin-left: 4395px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: &quot;Courier New&quot;; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><pre style=""><pre style=""><pre style=""><pre style=""><div style="line-height: 16px;"><div style=""><pre style=""><pre style=""><pre style=""><pre style=""><pre style=""><pre style=""><font face="Consolas, monospace" color="#cccccc" style="background-color: rgb(255, 255, 255);"><span style="font-size: 11.0667px;">// aosp_android-12.1.0_r2\frameworks\native\services\surfaceflinger\Scheduler\EventThread.cpp</span><span style="font-size: 8.3pt;"><br /></span></font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 128, 128); font-family: Consolas, monospace; font-size: 8.3pt;">EventThreadConnection</span><font color="#080808" face="Consolas, monospace" style="background-color: rgb(255, 255, 255);"><span style="font-size: 8.3pt;">::</span></font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 98, 122); font-family: Consolas, monospace; font-size: 8.3pt;">EventThreadConnection</span><font color="#080808" face="Consolas, monospace" style="background-color: rgb(255, 255, 255);"><span style="font-size: 8.3pt;">(<br />        </span></font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 128, 128); font-family: Consolas, monospace; font-size: 8.3pt;">EventThread</span><font color="#080808" face="Consolas, monospace" style="background-color: rgb(255, 255, 255);"><span style="font-size: 8.3pt;">* eventThread, </span></font><span style="background-color: rgb(255, 255, 255); color: rgb(55, 31, 128); font-family: Consolas, monospace; font-size: 8.3pt;">uid_t </span><font color="#080808" face="Consolas, monospace" style="background-color: rgb(255, 255, 255);"><span style="font-size: 8.3pt;">callingUid, </span></font><span style="background-color: rgb(255, 255, 255); color: rgb(55, 31, 128); font-family: Consolas, monospace; font-size: 8.3pt;">ResyncCallback </span><font color="#080808" face="Consolas, monospace" style="background-color: rgb(255, 255, 255);"><span style="font-size: 8.3pt;">resyncCallback,<br />        </span></font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 128, 128); font-family: Consolas, monospace; font-size: 8.3pt;">ISurfaceComposer</span><font color="#080808" face="Consolas, monospace" style="background-color: rgb(255, 255, 255);"><span style="font-size: 8.3pt;">::</span></font><span style="background-color: rgb(255, 255, 255); color: rgb(55, 31, 128); font-family: Consolas, monospace; font-size: 8.3pt;">EventRegistrationFlags </span><font color="#080808" face="Consolas, monospace" style="background-color: rgb(255, 255, 255);"><span style="font-size: 8.3pt;">eventRegistration)<br />      : </span></font><span style="background-color: rgb(255, 255, 255); color: rgb(102, 14, 122); font-family: Consolas, monospace; font-size: 8.3pt;">resyncCallback</span><font color="#080808" face="Consolas, monospace" style="background-color: rgb(255, 255, 255);"><span style="font-size: 8.3pt;">(</span></font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 128, 128); font-family: Consolas, monospace; font-size: 8.3pt;">std</span><font color="#080808" face="Consolas, monospace" style="background-color: rgb(255, 255, 255);"><span style="font-size: 8.3pt;">::move(resyncCallback)),<br />        </span></font><span style="background-color: rgb(255, 255, 255); color: rgb(102, 14, 122); font-family: Consolas, monospace; font-size: 8.3pt;">mOwnerUid</span><font color="#080808" face="Consolas, monospace" style="background-color: rgb(255, 255, 255);"><span style="font-size: 8.3pt;">(callingUid),<br />        </span></font><span style="background-color: rgb(255, 255, 255); color: rgb(102, 14, 122); font-family: Consolas, monospace; font-size: 8.3pt;">mEventRegistration</span><font color="#080808" face="Consolas, monospace" style="background-color: rgb(255, 255, 255);"><span style="font-size: 8.3pt;">(eventRegistration),<br />        </span></font><span style="background-color: rgb(255, 255, 255); color: rgb(102, 14, 122); font-family: Consolas, monospace; font-size: 8.3pt;">mEventThread</span><font color="#080808" face="Consolas, monospace" style=""><span style="font-size: 8.3pt;"><span style="background-color: rgb(255, 255, 255);">(eventThread),<br />        </span><span style="background-color: rgb(204, 204, 204);">mChannel</span><span style="background-color: rgb(255, 255, 255);">(gui::BitTube::DefaultSize) {}</span></span></font></pre></pre></pre></pre></pre></pre></div></div></pre></pre></pre></pre></div></div></div></foreignObject><text x="4395" y="2442" fill="rgb(0, 0, 0)" font-family="Courier New" font-size="12px">// aosp_android-12.1.0_r2\frameworks\native\services\surfaceflinger\Scheduler\EventThread.cppEventThreadCo...</text></switch></g><path d="M 3950 2514 Q 3980 2514 4170 2472 Q 4360 2430 4383.63 2430" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 4388.88 2430 L 4381.88 2433.5 L 4383.63 2430 L 4381.88 2426.5 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><ellipse cx="3945" cy="2514" rx="5" ry="5" fill="#000000" stroke="none" pointer-events="all"/><rect x="5080" y="2519" width="540" height="330" fill="rgb(255, 255, 255)" stroke="#000000" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 537px; height: 1px; padding-top: 2519px; margin-left: 5085px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: &quot;Courier New&quot;; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><pre style=""><pre style=""><pre style=""><pre style=""><pre style=""><pre style=""><pre style=""><div style="line-height: 16px;"><div style="line-height: 16px;"><div style="line-height: 16px;"><div style="line-height: 16px;"><div style="line-height: 16px;"><div style="line-height: 16px;"><div style="font-family: Consolas, &quot;Courier New&quot;, monospace; font-size: 12px;"><span style="color: #3f7f5f;">// frameworks\native\libs\gui\BitTube.cpp</span></div><div style=""><span style="white-space: normal; font-family: Consolas, &quot;Courier New&quot;, monospace; color: rgb(127, 0, 85); font-weight: bold;">void</span><font face="Consolas, Courier New, monospace" style="white-space: normal;"> BitTube::init(</font><span style="white-space: normal; font-family: Consolas, &quot;Courier New&quot;, monospace; color: rgb(127, 0, 85); font-weight: bold;">size_t</span><font face="Consolas, Courier New, monospace" style="white-space: normal;"> rcvbuf, </font><span style="white-space: normal; font-family: Consolas, &quot;Courier New&quot;, monospace; color: rgb(127, 0, 85); font-weight: bold;">size_t</span><font face="Consolas, Courier New, monospace" style="white-space: normal;"> sndbuf) {</font><br /></div><div style=""><span style="font-family: Consolas, &quot;Courier New&quot;, monospace; font-size: 12px;">    </span><span style="font-family: Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(127, 0, 85); font-weight: bold;">int</span><span style="font-family: Consolas, &quot;Courier New&quot;, monospace; font-size: 12px;"> </span><span style="font-family: Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(106, 62, 62);">sockets</span><font face="Consolas, Courier New, monospace" style="">[2];</font></div><div style=""><font style=""><div><span style="white-space: normal; font-family: Consolas, &quot;Courier New&quot;, monospace;">    </span><span style="white-space: normal; font-family: Consolas, &quot;Courier New&quot;, monospace; color: rgb(127, 0, 85); font-weight: bold;">if</span><span style="white-space: normal; font-family: Consolas, &quot;Courier New&quot;, monospace;"> (<span style="">socketpair(AF_UNIX, SOCK_SEQPACKET, 0, sockets) </span>== 0) {</span><br /></div></font></div><div style="font-family: Consolas, &quot;Courier New&quot;, monospace; font-size: 12px;">        <span style="color: #7f0055;font-weight: bold;">size_t</span> size = DEFAULT_SOCKET_BUFFER_SIZE;</div><div style="font-family: Consolas, &quot;Courier New&quot;, monospace; font-size: 12px;">        setsockopt(<span style="color: #6a3e3e;">sockets</span>[0], SOL_SOCKET, SO_RCVBUF, &amp;rcvbuf, <span style="color: #7f0055;font-weight: bold;">sizeof</span>(rcvbuf));</div><div style="font-family: Consolas, &quot;Courier New&quot;, monospace; font-size: 12px;">        setsockopt(<span style="color: #6a3e3e;">sockets</span>[1], SOL_SOCKET, SO_SNDBUF, &amp;sndbuf, <span style="color: #7f0055;font-weight: bold;">sizeof</span>(sndbuf));</div><div style="font-family: Consolas, &quot;Courier New&quot;, monospace; font-size: 12px;"><span style="color: #3f7f5f;">        // since we don't use the "return channel", we keep it small...</span></div><div style="font-family: Consolas, &quot;Courier New&quot;, monospace; font-size: 12px;">        setsockopt(<span style="color: #6a3e3e;">sockets</span>[0], SOL_SOCKET, SO_SNDBUF, &amp;size, <span style="color: #7f0055;font-weight: bold;">sizeof</span>(size));</div><div style="font-family: Consolas, &quot;Courier New&quot;, monospace; font-size: 12px;">        setsockopt(<span style="color: #6a3e3e;">sockets</span>[1], SOL_SOCKET, SO_RCVBUF, &amp;size, <span style="color: #7f0055;font-weight: bold;">sizeof</span>(size));</div><div style="font-family: Consolas, &quot;Courier New&quot;, monospace; font-size: 12px;">        fcntl(<span style="color: #6a3e3e;">sockets</span>[0], F_SETFL, O_NONBLOCK);</div><div style="font-family: Consolas, &quot;Courier New&quot;, monospace; font-size: 12px;">        fcntl(<span style="color: #6a3e3e;">sockets</span>[1], F_SETFL, O_NONBLOCK);</div><div style=""><span style="white-space: normal; font-family: Consolas, &quot;Courier New&quot;, monospace;">        </span><span style="white-space: normal; font-family: Consolas, &quot;Courier New&quot;, monospace; color: rgb(106, 62, 62);">mReceiveFd</span><span style="white-space: normal; font-family: Consolas, &quot;Courier New&quot;, monospace;">.reset(</span><span style="white-space: normal; font-family: Consolas, &quot;Courier New&quot;, monospace; color: rgb(106, 62, 62);">sockets</span><span style="white-space: normal; font-family: Consolas, &quot;Courier New&quot;, monospace;">[0]);</span><br /></div><div style="font-family: Consolas, &quot;Courier New&quot;, monospace; font-size: 12px;"><span style="">        </span><span style="color: rgb(106, 62, 62);">mSendFd</span><span style="">.reset(</span><span style="color: rgb(106, 62, 62);">sockets</span><span style="">[1]);</span></div><div style="font-family: Consolas, &quot;Courier New&quot;, monospace; font-size: 12px;">    } <span style="color: #7f0055;font-weight: bold;">else</span> {</div><div style="font-family: Consolas, &quot;Courier New&quot;, monospace; font-size: 12px;">        <span style="color: #6a3e3e;">mReceiveFd</span>.reset();</div><div style="font-family: Consolas, &quot;Courier New&quot;, monospace; font-size: 12px;">        ALOGE(<span style="color: #2a00ff;">"BitTube: pipe creation failed (</span><span style="color: #6a3e3e;">%s</span><span style="color: #2a00ff;">)"</span>, strerror(errno));</div><div style="font-family: Consolas, &quot;Courier New&quot;, monospace; font-size: 12px;">    }</div><div style="font-family: Consolas, &quot;Courier New&quot;, monospace; font-size: 12px;">}</div></div></div></div></div></div></div></pre></pre></pre></pre></pre></pre></pre></div></div></div></foreignObject><text x="5085" y="2531" fill="rgb(0, 0, 0)" font-family="Courier New" font-size="12px">// frameworks\native\libs\gui\BitTube.cpp...</text></switch></g><path d="M 4500 2575 Q 4530 2575 4785 2502 Q 5040 2429 5063.63 2429" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 5068.88 2429 L 5061.88 2432.5 L 5063.63 2429 L 5061.88 2425.5 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><ellipse cx="4495" cy="2575" rx="5" ry="5" fill="#000000" stroke="none" pointer-events="all"/><rect x="40" y="650" width="680" height="1270" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 677px; height: 1px; padding-top: 650px; margin-left: 45px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: &quot;Courier New&quot;; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><pre style=""><pre style=""><pre style=""><pre style=""><div style="line-height: 16px;"><div style=""><pre style="font-family: Consolas, monospace; font-size: 8.3pt;"><font color="#cccccc" style="background-color: rgb(255, 255, 255);">// aosp_android-12.1.0_r2\frameworks\native\services\surfaceflinger\SurfaceFlinger.cpp<br /></font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 51, 179);">void </span><span style="background-color: rgb(255, 255, 255); color: rgb(0, 128, 128);">SurfaceFlinger</span><font color="#080808" style="background-color: rgb(255, 255, 255);">::</font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 98, 122);">processDisplayAdded</span><font color="#080808" style="background-color: rgb(255, 255, 255);">(</font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 51, 179);">const </span><span style="background-color: rgb(255, 255, 255); color: rgb(0, 128, 128);">wp</span><font color="#080808" style="background-color: rgb(255, 255, 255);">&lt;</font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 128, 128);">IBinder</span><font color="#080808" style="background-color: rgb(255, 255, 255);">&gt;&amp; displayToken,<br />                                         </font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 51, 179);">const </span><span style="background-color: rgb(255, 255, 255); color: rgb(0, 128, 128);">DisplayDeviceState</span><font color="#080808" style="background-color: rgb(255, 255, 255);">&amp; state) {<br />    </font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 128, 128);">ui</span><font color="#080808" style="background-color: rgb(255, 255, 255);">::</font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 128, 128);">Size </span><span style="background-color: rgb(255, 255, 255); color: rgb(0, 0, 0);">resolution</span><font color="#080808" style="background-color: rgb(255, 255, 255);">(</font><span style="background-color: rgb(255, 255, 255); color: rgb(23, 80, 235);">0</span><font color="#080808" style="background-color: rgb(255, 255, 255);">, </font><span style="background-color: rgb(255, 255, 255); color: rgb(23, 80, 235);">0</span><font color="#080808" style="background-color: rgb(255, 255, 255);">);<br />    ui::PixelFormat </font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 0, 0);">pixelFormat </span><font color="#080808" style="background-color: rgb(255, 255, 255);">= </font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 51, 179);">static_cast</span><font color="#080808" style="background-color: rgb(255, 255, 255);">&lt;ui::PixelFormat&gt;(PIXEL_FORMAT_UNKNOWN);<br />    </font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 51, 179);">if </span><font color="#080808" style="background-color: rgb(255, 255, 255);">(state.physical) {<br />        </font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 0, 0);">resolution </span><font color="#080808" style="background-color: rgb(255, 255, 255);">= state.physical-&gt;</font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 0, 0);">activeMode</span><font color="#080808" style="background-color: rgb(255, 255, 255);">-&gt;</font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 0, 0);">getSize</span><font color="#080808" style="background-color: rgb(255, 255, 255);">();<br />        pixelFormat = </font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 51, 179);">static_cast</span><font color="#080808" style="background-color: rgb(255, 255, 255);">&lt;ui::PixelFormat&gt;(PIXEL_FORMAT_RGBA_8888);<br />    } </font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 51, 179);">else if </span><font color="#080808" style="background-color: rgb(255, 255, 255);">(state.</font><span style="background-color: rgb(255, 255, 255); color: rgb(102, 14, 122);">surface </span><span style="background-color: rgb(255, 255, 255); color: rgb(0, 128, 128);">!= </span><span style="background-color: rgb(255, 255, 255); color: rgb(0, 51, 179);">nullptr</span><font color="#080808" style="background-color: rgb(255, 255, 255);">) {<br />        </font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 51, 179);">int </span><span style="background-color: rgb(255, 255, 255); color: rgb(0, 0, 0);">status </span><font color="#080808" style="background-color: rgb(255, 255, 255);">= state.</font><span style="background-color: rgb(255, 255, 255); color: rgb(102, 14, 122);">surface</span><span style="background-color: rgb(255, 255, 255); color: rgb(0, 128, 128);">-&gt;</span><font color="#080808" style="background-color: rgb(255, 255, 255);">query(</font><span style="background-color: rgb(255, 255, 255); color: rgb(135, 16, 148); font-style: italic;">NATIVE_WINDOW_WIDTH</span><font color="#080808" style="background-color: rgb(255, 255, 255);">, &amp;</font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 0, 0);">resolution</span><font color="#080808" style="background-color: rgb(255, 255, 255);">.</font><span style="background-color: rgb(255, 255, 255); color: rgb(102, 14, 122);">width</span><font color="#080808" style="background-color: rgb(255, 255, 255);">);<br />        </font><span style="background-color: rgb(255, 255, 255); color: rgb(31, 84, 46); font-weight: bold;">ALOGE_IF</span><font color="#080808" style="background-color: rgb(255, 255, 255);">(</font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 0, 0);">status </span><font color="#080808" style="background-color: rgb(255, 255, 255);">!= NO_ERROR, </font><span style="background-color: rgb(255, 255, 255); color: rgb(6, 125, 23);">"Unable to query width (%d)"</span><font color="#080808" style="background-color: rgb(255, 255, 255);">, </font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 0, 0);">status</span><font color="#080808" style="background-color: rgb(255, 255, 255);">);<br />        </font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 0, 0);">status </span><font color="#080808" style="background-color: rgb(255, 255, 255);">= state.</font><span style="background-color: rgb(255, 255, 255); color: rgb(102, 14, 122);">surface</span><span style="background-color: rgb(255, 255, 255); color: rgb(0, 128, 128);">-&gt;</span><font color="#080808" style="background-color: rgb(255, 255, 255);">query(</font><span style="background-color: rgb(255, 255, 255); color: rgb(135, 16, 148); font-style: italic;">NATIVE_WINDOW_HEIGHT</span><font color="#080808" style="background-color: rgb(255, 255, 255);">, &amp;</font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 0, 0);">resolution</span><font color="#080808" style="background-color: rgb(255, 255, 255);">.</font><span style="background-color: rgb(255, 255, 255); color: rgb(102, 14, 122);">height</span><font color="#080808" style="background-color: rgb(255, 255, 255);">);<br />        </font><span style="background-color: rgb(255, 255, 255); color: rgb(31, 84, 46); font-weight: bold;">ALOGE_IF</span><font color="#080808" style="background-color: rgb(255, 255, 255);">(</font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 0, 0);">status </span><font color="#080808" style="background-color: rgb(255, 255, 255);">!= NO_ERROR, </font><span style="background-color: rgb(255, 255, 255); color: rgb(6, 125, 23);">"Unable to query height (%d)"</span><font color="#080808" style="background-color: rgb(255, 255, 255);">, </font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 0, 0);">status</span><font color="#080808" style="background-color: rgb(255, 255, 255);">);<br />        </font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 51, 179);">int </span><span style="background-color: rgb(255, 255, 255); color: rgb(0, 0, 0);">format</span><font color="#080808" style="background-color: rgb(255, 255, 255);">;<br />        </font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 0, 0);">status </span><font color="#080808" style="background-color: rgb(255, 255, 255);">= state.</font><span style="background-color: rgb(255, 255, 255); color: rgb(102, 14, 122);">surface</span><span style="background-color: rgb(255, 255, 255); color: rgb(0, 128, 128);">-&gt;</span><font color="#080808" style="background-color: rgb(255, 255, 255);">query(</font><span style="background-color: rgb(255, 255, 255); color: rgb(135, 16, 148); font-style: italic;">NATIVE_WINDOW_FORMAT</span><font color="#080808" style="background-color: rgb(255, 255, 255);">, &amp;</font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 0, 0);">format</span><font color="#080808" style="background-color: rgb(255, 255, 255);">);<br />        </font><span style="background-color: rgb(255, 255, 255); color: rgb(31, 84, 46); font-weight: bold;">ALOGE_IF</span><font color="#080808" style="background-color: rgb(255, 255, 255);">(</font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 0, 0);">status </span><font color="#080808" style="background-color: rgb(255, 255, 255);">!= NO_ERROR, </font><span style="background-color: rgb(255, 255, 255); color: rgb(6, 125, 23);">"Unable to query format (%d)"</span><font color="#080808" style="background-color: rgb(255, 255, 255);">, </font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 0, 0);">status</span><font color="#080808" style="background-color: rgb(255, 255, 255);">);<br />        pixelFormat = </font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 51, 179);">static_cast</span><font color="#080808" style="background-color: rgb(255, 255, 255);">&lt;ui::PixelFormat&gt;(format);<br />    } </font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 51, 179);">else </span><font color="#080808" style="background-color: rgb(255, 255, 255);">{<br />        </font><span style="background-color: rgb(255, 255, 255); color: rgb(140, 140, 140); font-style: italic;">// Virtual displays without a surface are dormant:<br /></span><span style="background-color: rgb(255, 255, 255); color: rgb(140, 140, 140); font-style: italic;">        // they have external state (layer stack, projection,<br /></span><span style="background-color: rgb(255, 255, 255); color: rgb(140, 140, 140); font-style: italic;">        // etc.) but no internal state (i.e. a DisplayDevice).<br /></span><span style="background-color: rgb(255, 255, 255); color: rgb(140, 140, 140); font-style: italic;">        </span><span style="background-color: rgb(255, 255, 255); color: rgb(0, 51, 179);">return</span><font color="#080808" style="background-color: rgb(255, 255, 255);">;<br />    }<br /><br />    </font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 128, 128);">compositionengine</span><font color="#080808" style="background-color: rgb(255, 255, 255);">::</font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 128, 128);">DisplayCreationArgsBuilder </span><span style="background-color: rgb(255, 255, 255); color: rgb(0, 0, 0);">builder</span><font color="#080808" style="background-color: rgb(255, 255, 255);">;<br />    </font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 51, 179);">if </span><font color="#080808" style="background-color: rgb(255, 255, 255);">(</font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 51, 179);">const auto</span><font color="#080808" style="background-color: rgb(255, 255, 255);">&amp; physical = state.physical) {<br />        builder.setId(physical-&gt;id);<br />        builder.setConnectionType(physical-&gt;type);<br />    } </font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 51, 179);">else </span><font color="#080808" style="background-color: rgb(255, 255, 255);">{<br />        builder.setId(acquireVirtualDisplay(resolution, pixelFormat));<br />    }<br /><br />    </font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 0, 0);">builder</span><font color="#080808" style="background-color: rgb(255, 255, 255);">.setPixels(</font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 0, 0);">resolution</span><font color="#080808" style="background-color: rgb(255, 255, 255);">);<br />    </font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 0, 0);">builder</span><font color="#080808" style="background-color: rgb(255, 255, 255);">.setIsSecure(state.</font><span style="background-color: rgb(255, 255, 255); color: rgb(102, 14, 122);">isSecure</span><font color="#080808" style="background-color: rgb(255, 255, 255);">);<br />    </font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 0, 0);">builder</span><font color="#080808" style="background-color: rgb(255, 255, 255);">.setLayerStackId(state.layerStack);<br />    builder.setPowerAdvisor(&amp;mPowerAdvisor);<br />    </font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 0, 0);">builder</span><font color="#080808" style="background-color: rgb(255, 255, 255);">.setName(state.</font><span style="background-color: rgb(255, 255, 255); color: rgb(102, 14, 122);">displayName</span><font color="#080808" style="background-color: rgb(255, 255, 255);">);<br />    </font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 51, 179);">auto </span><span style="background-color: rgb(255, 255, 255); color: rgb(0, 0, 0);">compositionDisplay </span><font color="#080808" style="background-color: rgb(255, 255, 255);">= getCompositionEngine().createDisplay(</font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 0, 0);">builder</span><font color="#080808" style="background-color: rgb(255, 255, 255);">.build());<br />    </font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 0, 0);">compositionDisplay</span><span style="background-color: rgb(255, 255, 255); color: rgb(0, 128, 128);">-&gt;</span><font color="#080808" style="background-color: rgb(255, 255, 255);">setLayerCachingEnabled(</font><span style="background-color: rgb(255, 255, 255); color: rgb(102, 14, 122);">mLayerCachingEnabled</span><font color="#080808" style="background-color: rgb(255, 255, 255);">);<br /><br />    </font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 128, 128);">sp</span><font color="#080808" style="background-color: rgb(255, 255, 255);">&lt;</font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 128, 128);">compositionengine</span><font color="#080808" style="background-color: rgb(255, 255, 255);">::</font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 128, 128);">DisplaySurface</span><font color="#080808" style="background-color: rgb(255, 255, 255);">&gt; </font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 0, 0);">displaySurface</span><font color="#080808" style="background-color: rgb(255, 255, 255);">;<br />    </font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 128, 128);">sp</span><font color="#080808" style="background-color: rgb(255, 255, 255);">&lt;</font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 128, 128);">IGraphicBufferProducer</span><font color="#080808" style="background-color: rgb(255, 255, 255);">&gt; </font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 0, 0);">producer</span><font color="#080808" style="background-color: rgb(255, 255, 255);">;<br />    </font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 128, 128);">sp</span><font color="#080808" style="background-color: rgb(255, 255, 255);">&lt;</font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 128, 128);">IGraphicBufferProducer</span><font color="#080808" style="background-color: rgb(255, 255, 255);">&gt; </font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 0, 0);">bqProducer</span><font color="#080808" style="background-color: rgb(255, 255, 255);">;<br />    </font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 128, 128);">sp</span><font color="#080808" style="background-color: rgb(255, 255, 255);">&lt;</font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 128, 128);">IGraphicBufferConsumer</span><font color="#080808" style="background-color: rgb(255, 255, 255);">&gt; </font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 0, 0);">bqConsumer</span><font color="#080808" style="background-color: rgb(255, 255, 255);">;<br />    getFactory().createBufferQueue(&amp;</font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 0, 0);">bqProducer</span><font color="#080808" style="background-color: rgb(255, 255, 255);">, &amp;</font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 0, 0);">bqConsumer</span><font color="#080808" style="background-color: rgb(255, 255, 255);">, </font><span style="background-color: rgb(255, 255, 255); color: rgb(140, 140, 140); font-style: italic;">/*consumerIsSurfaceFlinger =*/</span><span style="background-color: rgb(255, 255, 255); color: rgb(0, 51, 179);">false</span><font color="#080808" style="background-color: rgb(255, 255, 255);">);<br /><br />    </font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 51, 179);">if </span><font color="#080808" style="background-color: rgb(255, 255, 255);">(state.isVirtual()) {<br />        </font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 51, 179);">const auto </span><span style="background-color: rgb(255, 255, 255); color: rgb(0, 0, 0);">displayId </span><font color="#080808" style="background-color: rgb(255, 255, 255);">= VirtualDisplayId::tryCast(compositionDisplay-&gt;getId());<br />        </font><span style="background-color: rgb(255, 255, 255); color: rgb(31, 84, 46); font-weight: bold;">LOG_FATAL_IF</span><font color="#080808" style="background-color: rgb(255, 255, 255);">(!displayId);<br />        </font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 51, 179);">auto </span><span style="background-color: rgb(255, 255, 255); color: rgb(0, 0, 0);">surface </span><font color="#080808" style="background-color: rgb(255, 255, 255);">= sp&lt;VirtualDisplaySurface&gt;::make(getHwComposer(), *displayId, state.surface,<br />                                                       bqProducer, bqConsumer, state.displayName);<br />        displaySurface = surface;<br />        producer = std::move(surface);<br />    } </font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 51, 179);">else </span><font color="#080808" style="background-color: rgb(255, 255, 255);">{<br />        </font><span style="background-color: rgb(255, 255, 255); color: rgb(31, 84, 46); font-weight: bold;">ALOGE_IF</span><font color="#080808" style="background-color: rgb(255, 255, 255);">(state.</font><span style="background-color: rgb(255, 255, 255); color: rgb(102, 14, 122);">surface </span><span style="background-color: rgb(255, 255, 255); color: rgb(0, 128, 128);">!= </span><span style="background-color: rgb(255, 255, 255); color: rgb(0, 51, 179);">nullptr</span><font color="#080808" style="background-color: rgb(255, 255, 255);">,<br />                 </font><span style="background-color: rgb(255, 255, 255); color: rgb(6, 125, 23);">"adding a supported display, but rendering "<br /></span><span style="background-color: rgb(255, 255, 255); color: rgb(6, 125, 23);">                 "surface is provided (%p), ignoring it"</span><font color="#080808" style="background-color: rgb(255, 255, 255);">,<br />                 state.</font><span style="background-color: rgb(255, 255, 255); color: rgb(102, 14, 122);">surface</span><font color="#080808" style="background-color: rgb(255, 255, 255);">.get());<br />        </font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 51, 179);">const auto </span><span style="background-color: rgb(255, 255, 255); color: rgb(0, 0, 0);">displayId </span><font color="#080808" style="background-color: rgb(255, 255, 255);">= PhysicalDisplayId::tryCast(compositionDisplay-&gt;getId());<br />        </font><span style="background-color: rgb(255, 255, 255); color: rgb(31, 84, 46); font-weight: bold;">LOG_FATAL_IF</span><font color="#080808" style="background-color: rgb(255, 255, 255);">(!displayId);<br />        displaySurface =<br />                sp&lt;FramebufferSurface&gt;::make(getHwComposer(), *displayId, bqConsumer,<br />                                             state.physical-&gt;activeMode-&gt;getSize(),<br />                                             ui::Size(maxGraphicsWidth, maxGraphicsHeight));<br />        </font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 0, 0);">producer </span><span style="background-color: rgb(255, 255, 255); color: rgb(0, 128, 128);">= </span><span style="background-color: rgb(255, 255, 255); color: rgb(0, 0, 0);">bqProducer</span><font color="#080808" style="background-color: rgb(255, 255, 255);">;<br />    }<br /><br />    </font><span style="background-color: rgb(255, 255, 255); color: rgb(31, 84, 46); font-weight: bold;">LOG_FATAL_IF</span><font color="#080808" style="background-color: rgb(255, 255, 255);">(!</font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 0, 0);">displaySurface</span><font color="#080808" style="background-color: rgb(255, 255, 255);">);<br />    </font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 51, 179);">const auto </span><span style="background-color: rgb(255, 255, 255); color: rgb(0, 0, 0);">display </span><font color="#080808" style="background-color: rgb(255, 255, 255);">= </font><font color="#080808" style="background-color: rgb(204, 204, 204);">setupNewDisplayDeviceInternal</font><font color="#080808" style="background-color: rgb(255, 255, 255);">(displayToken, </font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 128, 128);">std</span><font color="#080808" style="background-color: rgb(255, 255, 255);">::move(</font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 0, 0);">compositionDisplay</span><font color="#080808" style="background-color: rgb(255, 255, 255);">),<br />                                                       state, </font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 0, 0);">displaySurface</span><font color="#080808" style="background-color: rgb(255, 255, 255);">, </font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 0, 0);">producer</span><font color="#080808" style="background-color: rgb(255, 255, 255);">);<br />    </font><span style="background-color: rgb(255, 255, 255); color: rgb(102, 14, 122);">mDisplays</span><font color="#080808" style="background-color: rgb(255, 255, 255);">.emplace(displayToken, </font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 0, 0);">display</span><font color="#080808" style="background-color: rgb(255, 255, 255);">);<br />    </font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 51, 179);">if </span><font color="#080808" style="background-color: rgb(255, 255, 255);">(</font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 0, 0);">display</span><span style="background-color: rgb(255, 255, 255); color: rgb(0, 128, 128);">-&gt;</span><font color="#080808" style=""><span style="background-color: rgb(255, 255, 255);">isPrimary()) {<br />        </span><span style="background-color: rgb(204, 204, 204);">initScheduler</span><span style="background-color: rgb(255, 255, 255);">(</span></font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 0, 0);">display</span><font color="#080808" style="background-color: rgb(255, 255, 255);">);<br />    }<br />    </font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 51, 179);">if </span><font color="#080808" style="background-color: rgb(255, 255, 255);">(!state.isVirtual()) {<br />        dispatchDisplayHotplugEvent(display-&gt;getPhysicalId(), </font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 51, 179);">true</span><font color="#080808" style="background-color: rgb(255, 255, 255);">);<br />    }<br />}</font></pre></div></div></pre></pre></pre></pre></div></div></div></foreignObject><text x="45" y="662" fill="rgb(0, 0, 0)" font-family="Courier New" font-size="12px">// aosp_android-12.1.0_r2\frameworks\native\services\surfaceflinger\SurfaceFlinger.cpp...</text></switch></g><rect x="790" y="680" width="700" height="570" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 697px; height: 1px; padding-top: 680px; margin-left: 795px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: &quot;Courier New&quot;; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><pre style=""><pre style=""><pre style=""><pre style=""><div style="line-height: 16px;"><div style=""><pre style=""><pre style=""><font face="Consolas, monospace" color="#cccccc" style="background-color: rgb(255, 255, 255);"><span style="font-size: 11.0667px;">// aosp_android-12.1.0_r2\frameworks\native\services\surfaceflinger\SurfaceFlinger.cpp</span><span style="font-size: 8.3pt;"><br /></span></font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 128, 128); font-family: Consolas, monospace; font-size: 8.3pt;">sp</span><font color="#080808" face="Consolas, monospace" style="background-color: rgb(255, 255, 255);"><span style="font-size: 8.3pt;">&lt;</span></font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 128, 128); font-family: Consolas, monospace; font-size: 8.3pt;">DisplayDevice</span><font color="#080808" face="Consolas, monospace" style="background-color: rgb(255, 255, 255);"><span style="font-size: 8.3pt;">&gt; </span></font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 128, 128); font-family: Consolas, monospace; font-size: 8.3pt;">SurfaceFlinger</span><font color="#080808" face="Consolas, monospace" style="background-color: rgb(255, 255, 255);"><span style="font-size: 8.3pt;">::</span></font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 98, 122); font-family: Consolas, monospace; font-size: 8.3pt;">setupNewDisplayDeviceInternal</span><font color="#080808" face="Consolas, monospace" style="background-color: rgb(255, 255, 255);"><span style="font-size: 8.3pt;">(<br />        </span></font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 51, 179); font-family: Consolas, monospace; font-size: 8.3pt;">const </span><span style="background-color: rgb(255, 255, 255); color: rgb(0, 128, 128); font-family: Consolas, monospace; font-size: 8.3pt;">wp</span><font color="#080808" face="Consolas, monospace" style="background-color: rgb(255, 255, 255);"><span style="font-size: 8.3pt;">&lt;</span></font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 128, 128); font-family: Consolas, monospace; font-size: 8.3pt;">IBinder</span><font color="#080808" face="Consolas, monospace" style="background-color: rgb(255, 255, 255);"><span style="font-size: 8.3pt;">&gt;&amp; displayToken,<br />        </span></font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 128, 128); font-family: Consolas, monospace; font-size: 8.3pt;">std</span><font color="#080808" face="Consolas, monospace" style="background-color: rgb(255, 255, 255);"><span style="font-size: 8.3pt;">::</span></font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 128, 128); font-family: Consolas, monospace; font-size: 8.3pt;">shared_ptr</span><font color="#080808" face="Consolas, monospace" style="background-color: rgb(255, 255, 255);"><span style="font-size: 8.3pt;">&lt;</span></font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 128, 128); font-family: Consolas, monospace; font-size: 8.3pt;">compositionengine</span><font color="#080808" face="Consolas, monospace" style="background-color: rgb(255, 255, 255);"><span style="font-size: 8.3pt;">::</span></font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 128, 128); font-family: Consolas, monospace; font-size: 8.3pt;">Display</span><font color="#080808" face="Consolas, monospace" style="background-color: rgb(255, 255, 255);"><span style="font-size: 8.3pt;">&gt; compositionDisplay,<br />        </span></font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 51, 179); font-family: Consolas, monospace; font-size: 8.3pt;">const </span><span style="background-color: rgb(255, 255, 255); color: rgb(0, 128, 128); font-family: Consolas, monospace; font-size: 8.3pt;">DisplayDeviceState</span><font color="#080808" face="Consolas, monospace" style="background-color: rgb(255, 255, 255);"><span style="font-size: 8.3pt;">&amp; state,<br />        </span></font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 51, 179); font-family: Consolas, monospace; font-size: 8.3pt;">const </span><span style="background-color: rgb(255, 255, 255); color: rgb(0, 128, 128); font-family: Consolas, monospace; font-size: 8.3pt;">sp</span><font color="#080808" face="Consolas, monospace" style="background-color: rgb(255, 255, 255);"><span style="font-size: 8.3pt;">&lt;</span></font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 128, 128); font-family: Consolas, monospace; font-size: 8.3pt;">compositionengine</span><font color="#080808" face="Consolas, monospace" style="background-color: rgb(255, 255, 255);"><span style="font-size: 8.3pt;">::</span></font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 128, 128); font-family: Consolas, monospace; font-size: 8.3pt;">DisplaySurface</span><font color="#080808" face="Consolas, monospace" style="background-color: rgb(255, 255, 255);"><span style="font-size: 8.3pt;">&gt;&amp; displaySurface,<br />        </span></font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 51, 179); font-family: Consolas, monospace; font-size: 8.3pt;">const </span><span style="background-color: rgb(255, 255, 255); color: rgb(0, 128, 128); font-family: Consolas, monospace; font-size: 8.3pt;">sp</span><font color="#080808" face="Consolas, monospace" style="background-color: rgb(255, 255, 255);"><span style="font-size: 8.3pt;">&lt;</span></font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 128, 128); font-family: Consolas, monospace; font-size: 8.3pt;">IGraphicBufferProducer</span><font color="#080808" face="Consolas, monospace" style="background-color: rgb(255, 255, 255);"><span style="font-size: 8.3pt;">&gt;&amp; producer) {<br />    </span></font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 128, 128); font-family: Consolas, monospace; font-size: 8.3pt;">DisplayDeviceCreationArgs </span><span style="background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-family: Consolas, monospace; font-size: 8.3pt;">creationArgs</span><font color="#080808" face="Consolas, monospace" style="background-color: rgb(255, 255, 255);"><span style="font-size: 8.3pt;">(</span></font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 51, 179); font-family: Consolas, monospace; font-size: 8.3pt;">this</span><font color="#080808" face="Consolas, monospace" style="background-color: rgb(255, 255, 255);"><span style="font-size: 8.3pt;">, getHwComposer(), displayToken, compositionDisplay);<br />    </span></font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-family: Consolas, monospace; font-size: 8.3pt;">creationArgs</span><font color="#080808" face="Consolas, monospace" style="background-color: rgb(255, 255, 255);"><span style="font-size: 8.3pt;">.</span></font><span style="background-color: rgb(255, 255, 255); color: rgb(102, 14, 122); font-family: Consolas, monospace; font-size: 8.3pt;">sequenceId </span><font color="#080808" face="Consolas, monospace" style="background-color: rgb(255, 255, 255);"><span style="font-size: 8.3pt;">= state.</span></font><span style="background-color: rgb(255, 255, 255); color: rgb(102, 14, 122); font-family: Consolas, monospace; font-size: 8.3pt;">sequenceId</span><font color="#080808" face="Consolas, monospace" style="background-color: rgb(255, 255, 255);"><span style="font-size: 8.3pt;">;<br />    </span></font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-family: Consolas, monospace; font-size: 8.3pt;">creationArgs</span><font color="#080808" face="Consolas, monospace" style="background-color: rgb(255, 255, 255);"><span style="font-size: 8.3pt;">.</span></font><span style="background-color: rgb(255, 255, 255); color: rgb(102, 14, 122); font-family: Consolas, monospace; font-size: 8.3pt;">isSecure </span><font color="#080808" face="Consolas, monospace" style="background-color: rgb(255, 255, 255);"><span style="font-size: 8.3pt;">= state.</span></font><span style="background-color: rgb(255, 255, 255); color: rgb(102, 14, 122); font-family: Consolas, monospace; font-size: 8.3pt;">isSecure</span><font color="#080808" face="Consolas, monospace" style="background-color: rgb(255, 255, 255);"><span style="font-size: 8.3pt;">;<br />    </span></font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-family: Consolas, monospace; font-size: 8.3pt;">creationArgs</span><font color="#080808" face="Consolas, monospace" style="background-color: rgb(255, 255, 255);"><span style="font-size: 8.3pt;">.</span></font><span style="background-color: rgb(255, 255, 255); color: rgb(102, 14, 122); font-family: Consolas, monospace; font-size: 8.3pt;">displaySurface </span><span style="background-color: rgb(255, 255, 255); color: rgb(0, 128, 128); font-family: Consolas, monospace; font-size: 8.3pt;">= </span><font color="#080808" face="Consolas, monospace" style="background-color: rgb(255, 255, 255);"><span style="font-size: 8.3pt;">displaySurface;<br />    </span></font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-family: Consolas, monospace; font-size: 8.3pt;">creationArgs</span><font color="#080808" face="Consolas, monospace" style="background-color: rgb(255, 255, 255);"><span style="font-size: 8.3pt;">.</span></font><span style="background-color: rgb(255, 255, 255); color: rgb(102, 14, 122); font-family: Consolas, monospace; font-size: 8.3pt;">hasWideColorGamut </span><font color="#080808" face="Consolas, monospace" style="background-color: rgb(255, 255, 255);"><span style="font-size: 8.3pt;">= </span></font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 51, 179); font-family: Consolas, monospace; font-size: 8.3pt;">false</span><font color="#080808" face="Consolas, monospace" style="background-color: rgb(255, 255, 255);"><span style="font-size: 8.3pt;">;<br />    </span></font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-family: Consolas, monospace; font-size: 8.3pt;">creationArgs</span><font color="#080808" face="Consolas, monospace" style="background-color: rgb(255, 255, 255);"><span style="font-size: 8.3pt;">.</span></font><span style="background-color: rgb(255, 255, 255); color: rgb(102, 14, 122); font-family: Consolas, monospace; font-size: 8.3pt;">supportedPerFrameMetadata </span><font color="#080808" face="Consolas, monospace" style="background-color: rgb(255, 255, 255);"><span style="font-size: 8.3pt;">= </span></font><span style="background-color: rgb(255, 255, 255); color: rgb(23, 80, 235); font-family: Consolas, monospace; font-size: 8.3pt;">0</span><font color="#080808" face="Consolas, monospace" style="background-color: rgb(255, 255, 255);"><span style="font-size: 8.3pt;">;<br /><br />    </span></font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 51, 179); font-family: Consolas, monospace; font-size: 8.3pt;">if </span><font color="#080808" face="Consolas, monospace" style="background-color: rgb(255, 255, 255);"><span style="font-size: 8.3pt;">(</span></font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 51, 179); font-family: Consolas, monospace; font-size: 8.3pt;">const auto</span><font color="#080808" face="Consolas, monospace" style="background-color: rgb(255, 255, 255);"><span style="font-size: 8.3pt;">&amp; physical = state.physical) {<br />        creationArgs.connectionType = physical-&gt;type;<br />        creationArgs.supportedModes = physical-&gt;supportedModes;<br />        creationArgs.activeModeId = physical-&gt;activeMode-&gt;getId();<br />        </span></font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 51, 179); font-family: Consolas, monospace; font-size: 8.3pt;">const auto </span><font color="#080808" face="Consolas, monospace" style="background-color: rgb(255, 255, 255);"><span style="font-size: 8.3pt;">[</span></font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-family: Consolas, monospace; font-size: 8.3pt;">idleTimerTimeoutMs</span><font color="#080808" face="Consolas, monospace" style="background-color: rgb(255, 255, 255);"><span style="font-size: 8.3pt;">, </span></font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-family: Consolas, monospace; font-size: 8.3pt;">supportKernelIdleTimer</span><font color="#080808" face="Consolas, monospace" style="background-color: rgb(255, 255, 255);"><span style="font-size: 8.3pt;">] =<br />                getIdleTimerConfiguration(compositionDisplay-&gt;getId());<br />        </span></font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 128, 128); font-family: Consolas, monospace; font-size: 8.3pt;">scheduler</span><font color="#080808" face="Consolas, monospace" style="background-color: rgb(255, 255, 255);"><span style="font-size: 8.3pt;">::</span></font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 128, 128); font-family: Consolas, monospace; font-size: 8.3pt;">RefreshRateConfigs</span><font color="#080808" face="Consolas, monospace" style="background-color: rgb(255, 255, 255);"><span style="font-size: 8.3pt;">::</span></font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 128, 128); font-family: Consolas, monospace; font-size: 8.3pt;">Config </span><span style="background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-family: Consolas, monospace; font-size: 8.3pt;">config </span><span style="background-color: rgb(255, 255, 255); color: rgb(8, 8, 8); font-family: Consolas, monospace; font-size: 8.3pt;">=<br /></span><span style="background-color: rgb(255, 255, 255); font-size: 11.0667px;"><font face="consolas" style="" color="#ff0000"><i style="">                // 获取 ro.surface_flinger.enable_frame_rate_override 属性值，当前系统为空，取默认值 false<br /></i></font></span><span style="background-color: rgb(255, 255, 255); color: rgb(8, 8, 8); font-family: Consolas, monospace; font-size: 8.3pt;">                {.enableFrameRateOverride = android::sysprop::enable_frame_rate_override(</span><span style="background-color: rgb(255, 255, 255); color: rgb(0, 51, 179); font-family: Consolas, monospace; font-size: 8.3pt;">false</span><font color="#080808" face="Consolas, monospace" style="background-color: rgb(255, 255, 255);"><span style="font-size: 8.3pt;">),<br />                 .frameRateMultipleThreshold =<br />                         base::GetIntProperty(</span></font><span style="background-color: rgb(255, 255, 255); color: rgb(6, 125, 23); font-family: Consolas, monospace; font-size: 8.3pt;">"debug.sf.frame_rate_multiple_threshold"</span><font color="#080808" face="Consolas, monospace" style="background-color: rgb(255, 255, 255);"><span style="font-size: 8.3pt;">, </span></font><span style="background-color: rgb(255, 255, 255); color: rgb(23, 80, 235); font-family: Consolas, monospace; font-size: 8.3pt;">0</span><font color="#080808" face="Consolas, monospace" style="background-color: rgb(255, 255, 255);"><span style="font-size: 8.3pt;">),<br />                 .idleTimerTimeoutMs = idleTimerTimeoutMs,<br />                 .supportKernelIdleTimer = supportKernelIdleTimer};<br />        </span></font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-family: Consolas, monospace; font-size: 8.3pt;">creationArgs</span><font color="#080808" face="Consolas, monospace" style="background-color: rgb(255, 255, 255);"><span style="font-size: 8.3pt;">.</span></font><span style="background-color: rgb(255, 255, 255); color: rgb(102, 14, 122); font-family: Consolas, monospace; font-size: 8.3pt;">refreshRateConfigs </span><font color="#080808" face="Consolas, monospace" style="background-color: rgb(255, 255, 255);"><span style="font-size: 8.3pt;">=<br />                </span></font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 128, 128); font-family: Consolas, monospace; font-size: 8.3pt;">std</span><font color="#080808" face="Consolas, monospace" style=""><span style="font-size: 8.3pt;"><span style="background-color: rgb(255, 255, 255);">::</span><span style="background-color: rgb(204, 204, 204);">make_shared&lt;</span></span></font><span style="background-color: rgb(204, 204, 204);"><span style="color: rgb(0, 128, 128); font-family: Consolas, monospace; font-size: 8.3pt;">scheduler</span><font color="#080808" face="Consolas, monospace" style=""><span style="font-size: 8.3pt;">::</span></font><span style="color: rgb(0, 128, 128); font-family: Consolas, monospace; font-size: 8.3pt;">RefreshRateConfigs</span></span><font color="#080808" face="Consolas, monospace" style=""><span style="font-size: 8.3pt;"><span style="background-color: rgb(204, 204, 204);">&gt;</span><span style="background-color: rgb(255, 255, 255);">(</span></span></font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-family: Consolas, monospace; font-size: 8.3pt;">creationArgs</span><font color="#080808" face="Consolas, monospace" style="background-color: rgb(255, 255, 255);"><span style="font-size: 8.3pt;">.</span></font><span style="background-color: rgb(255, 255, 255); color: rgb(102, 14, 122); font-family: Consolas, monospace; font-size: 8.3pt;">supportedModes</span><font color="#080808" face="Consolas, monospace" style="background-color: rgb(255, 255, 255);"><span style="font-size: 8.3pt;">,<br />                                                                </span></font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-family: Consolas, monospace; font-size: 8.3pt;">creationArgs</span><font color="#080808" face="Consolas, monospace" style="background-color: rgb(255, 255, 255);"><span style="font-size: 8.3pt;">.activeModeId, </span></font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-family: Consolas, monospace; font-size: 8.3pt;">config</span><font face="Consolas, monospace" style="background-color: rgb(255, 255, 255);"><span style="font-size: 8.3pt;"><font color="#080808">);<br />    }<br />    </font><font color="#0033b3">...</font></span></font><font color="#080808" face="Consolas, monospace" style="background-color: rgb(255, 255, 255);"><span style="font-size: 8.3pt;"><br />    </span></font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 51, 179); font-family: Consolas, monospace; font-size: 8.3pt;">return </span><span style="background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-family: Consolas, monospace; font-size: 8.3pt;">display</span><font color="#080808" face="Consolas, monospace" style="background-color: rgb(255, 255, 255);"><span style="font-size: 8.3pt;">;<br />}</span></font></pre></pre></div></div></pre></pre></pre></pre></div></div></div></foreignObject><text x="795" y="692" fill="rgb(0, 0, 0)" font-family="Courier New" font-size="12px">// aosp_android-12.1.0_r2\frameworks\native\services\surfaceflinger\SurfaceFlinger.cppsp&lt;DisplayDevice&gt; SurfaceFling...</text></switch></g><path d="M 180 1815 Q 210 1815 485 1792.5 Q 760 1770 783.63 1770" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 788.88 1770 L 781.88 1773.5 L 783.63 1770 L 781.88 1766.5 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><ellipse cx="175" cy="1815" rx="5" ry="5" fill="#000000" stroke="none" pointer-events="all"/><path d="M 385 1755 Q 415 1755 587.5 1217.5 Q 760 680 783.63 680" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 788.88 680 L 781.88 683.5 L 783.63 680 L 781.88 676.5 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><ellipse cx="380" cy="1755" rx="5" ry="5" fill="#000000" stroke="none" pointer-events="all"/><rect x="1550" y="680" width="680" height="140" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 677px; height: 1px; padding-top: 680px; margin-left: 1555px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: &quot;Courier New&quot;; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><pre style=""><pre style=""><pre style=""><pre style=""><div style="line-height: 16px;"><div style=""><pre style=""><pre style=""><pre style=""><font face="Consolas, monospace" color="#cccccc" style="background-color: rgb(255, 255, 255);"><span style="font-size: 11.0667px;">// aosp_android-12.1.0_r2\frameworks\native\services\surfaceflinger\Scheduler\RefreshRateConfigs.cpp</span><span style="font-size: 8.3pt;"><br /></span></font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 128, 128); font-family: Consolas, monospace; font-size: 8.3pt;">RefreshRateConfigs</span><font color="#080808" face="Consolas, monospace" style="background-color: rgb(255, 255, 255);"><span style="font-size: 8.3pt;">::</span></font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 98, 122); font-family: Consolas, monospace; font-size: 8.3pt;">RefreshRateConfigs</span><font color="#080808" face="Consolas, monospace" style="background-color: rgb(255, 255, 255);"><span style="font-size: 8.3pt;">(</span></font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 51, 179); font-family: Consolas, monospace; font-size: 8.3pt;">const </span><span style="background-color: rgb(255, 255, 255); color: rgb(0, 128, 128); font-family: Consolas, monospace; font-size: 8.3pt;">DisplayModes</span><font color="#080808" face="Consolas, monospace" style="background-color: rgb(255, 255, 255);"><span style="font-size: 8.3pt;">&amp; modes, </span></font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 128, 128); font-family: Consolas, monospace; font-size: 8.3pt;">DisplayModeId </span><font color="#080808" face="Consolas, monospace" style="background-color: rgb(255, 255, 255);"><span style="font-size: 8.3pt;">currentModeId,<br />                                       </span></font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 128, 128); font-family: Consolas, monospace; font-size: 8.3pt;">Config </span><font color="#080808" face="Consolas, monospace" style="background-color: rgb(255, 255, 255);"><span style="font-size: 8.3pt;">config)<br />      : mKnownFrameRates(constructKnownFrameRates(modes)), </span></font><span style="background-color: rgb(255, 255, 255); color: rgb(102, 14, 122); font-family: Consolas, monospace; font-size: 8.3pt;">mConfig</span><font color="#080808" face="Consolas, monospace" style=""><span style="font-size: 8.3pt;"><span style="background-color: rgb(255, 255, 255);">(config) {<br />    initializeIdleTimer();<br />    </span><span style="background-color: rgb(204, 204, 204);">updateDisplayModes</span><span style="background-color: rgb(255, 255, 255);">(modes, currentModeId);<br />}</span></span></font></pre></pre></pre></div></div></pre></pre></pre></pre></div></div></div></foreignObject><text x="1555" y="692" fill="rgb(0, 0, 0)" font-family="Courier New" font-size="12px">// aosp_android-12.1.0_r2\frameworks\native\services\surfaceflinger\Scheduler\RefreshRateConfigs.cppRefreshRateCo...</text></switch></g><path d="M 1200 1145 Q 1230 1145 1375 912.5 Q 1520 680 1543.63 680" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 1548.88 680 L 1541.88 683.5 L 1543.63 680 L 1541.88 676.5 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><ellipse cx="1195" cy="1145" rx="5" ry="5" fill="#000000" stroke="none" pointer-events="all"/><rect x="2270" y="680" width="690" height="780" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 687px; height: 1px; padding-top: 680px; margin-left: 2275px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: &quot;Courier New&quot;; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><pre style=""><pre style=""><pre style=""><pre style=""><div style="line-height: 16px;"><div style=""><pre style=""><pre style=""><pre style="background-color: rgb(255, 255, 255);"><pre style=""><font face="Consolas, monospace" color="#cccccc"><span style="font-size: 11.0667px;">// aosp_android-12.1.0_r2\frameworks\native\services\surfaceflinger\Scheduler\RefreshRateConfigs.cpp</span><span style="font-size: 8.3pt;"><br /></span></font><span style="color: rgb(0, 51, 179); font-family: Consolas, monospace; font-size: 8.3pt;">void </span><span style="color: rgb(0, 128, 128); font-family: Consolas, monospace; font-size: 8.3pt;">RefreshRateConfigs</span><font color="#080808" face="Consolas, monospace"><span style="font-size: 8.3pt;">::</span></font><span style="color: rgb(0, 98, 122); font-family: Consolas, monospace; font-size: 8.3pt;">updateDisplayModes</span><font color="#080808" face="Consolas, monospace"><span style="font-size: 8.3pt;">(</span></font><span style="color: rgb(0, 51, 179); font-family: Consolas, monospace; font-size: 8.3pt;">const </span><span style="color: rgb(0, 128, 128); font-family: Consolas, monospace; font-size: 8.3pt;">DisplayModes</span><font color="#080808" face="Consolas, monospace"><span style="font-size: 8.3pt;">&amp; modes,<br />                                            </span></font><span style="color: rgb(0, 128, 128); font-family: Consolas, monospace; font-size: 8.3pt;">DisplayModeId </span><font color="#080808" face="Consolas, monospace"><span style="font-size: 8.3pt;">currentModeId) {<br />    std::lock_guard lock(mLock);<br /><br />    </span></font><span style="color: rgb(140, 140, 140); font-family: Consolas, monospace; font-size: 8.3pt; font-style: italic;">// The current mode should be supported<br /></span><span style="color: rgb(140, 140, 140); font-family: Consolas, monospace; font-size: 8.3pt; font-style: italic;">    </span><span style="color: rgb(31, 84, 46); font-family: Consolas, monospace; font-size: 8.3pt; font-weight: bold;">LOG_ALWAYS_FATAL_IF</span><font color="#080808" face="Consolas, monospace"><span style="font-size: 8.3pt;">(std::none_of(modes.begin(), modes.end(), [&amp;](DisplayModePtr mode) {<br />        </span></font><span style="color: rgb(0, 51, 179); font-family: Consolas, monospace; font-size: 8.3pt;">return </span><font color="#080808" face="Consolas, monospace"><span style="font-size: 8.3pt;">mode-&gt;getId() == currentModeId;<br />    }));<br /><br />    </span></font><span style="color: rgb(140, 140, 140); font-family: Consolas, monospace; font-size: 8.3pt; font-style: italic;">// Invalidate the cached invocation to getBestRefreshRate. This forces<br /></span><span style="color: rgb(140, 140, 140); font-family: Consolas, monospace; font-size: 8.3pt; font-style: italic;">    // the refresh rate to be recomputed on the next call to getBestRefreshRate.<br /></span><span style="color: rgb(140, 140, 140); font-family: Consolas, monospace; font-size: 8.3pt; font-style: italic;">    </span><font color="#080808" face="Consolas, monospace"><span style="font-size: 8.3pt;">lastBestRefreshRateInvocation.reset();<br /><br />    mRefreshRates.clear();<br />    </span></font><span style="color: rgb(0, 51, 179); font-family: Consolas, monospace; font-size: 8.3pt;">for </span><font color="#080808" face="Consolas, monospace"><span style="font-size: 8.3pt;">(</span></font><span style="color: rgb(0, 51, 179); font-family: Consolas, monospace; font-size: 8.3pt;">const auto</span><font color="#080808" face="Consolas, monospace"><span style="font-size: 8.3pt;">&amp; mode : modes) {<br />        </span></font><span style="color: rgb(0, 51, 179); font-family: Consolas, monospace; font-size: 8.3pt;">const auto </span><font color="#080808" face="Consolas, monospace"><span style="font-size: 8.3pt;">modeId = mode-&gt;getId();<br />        mRefreshRates.emplace(modeId,<br />                              std::make_unique&lt;RefreshRate&gt;(mode, RefreshRate::ConstructorTag(</span></font><span style="color: rgb(23, 80, 235); font-family: Consolas, monospace; font-size: 8.3pt;">0</span><font color="#080808" face="Consolas, monospace"><span style="font-size: 8.3pt;">)));<br />        </span></font><span style="color: rgb(0, 51, 179); font-family: Consolas, monospace; font-size: 8.3pt;">if </span><font color="#080808" face="Consolas, monospace"><span style="font-size: 8.3pt;">(modeId == currentModeId) {<br />            mCurrentRefreshRate = mRefreshRates.at(modeId).get();<br />        }<br />    }<br /><br />    </span></font><span style="color: rgb(0, 128, 128); font-family: Consolas, monospace; font-size: 8.3pt;">std</span><font color="#080808" face="Consolas, monospace"><span style="font-size: 8.3pt;">::</span></font><span style="color: rgb(0, 128, 128); font-family: Consolas, monospace; font-size: 8.3pt;">vector</span><font color="#080808" face="Consolas, monospace"><span style="font-size: 8.3pt;">&lt;</span></font><span style="color: rgb(0, 51, 179); font-family: Consolas, monospace; font-size: 8.3pt;">const </span><span style="color: rgb(0, 128, 128); font-family: Consolas, monospace; font-size: 8.3pt;">RefreshRate</span><font color="#080808" face="Consolas, monospace"><span style="font-size: 8.3pt;">*&gt; </span></font><span style="color: rgb(0, 0, 0); font-family: Consolas, monospace; font-size: 8.3pt;">sortedModes</span><font color="#080808" face="Consolas, monospace"><span style="font-size: 8.3pt;">;<br />    getSortedRefreshRateListLocked([](</span></font><span style="color: rgb(0, 51, 179); font-family: Consolas, monospace; font-size: 8.3pt;">const </span><span style="color: rgb(0, 128, 128); font-family: Consolas, monospace; font-size: 8.3pt;">RefreshRate</span><font color="#080808" face="Consolas, monospace"><span style="font-size: 8.3pt;">&amp;) { </span></font><span style="color: rgb(0, 51, 179); font-family: Consolas, monospace; font-size: 8.3pt;">return true</span><font color="#080808" face="Consolas, monospace"><span style="font-size: 8.3pt;">; }, &amp;</span></font><span style="color: rgb(0, 0, 0); font-family: Consolas, monospace; font-size: 8.3pt;">sortedModes</span><font color="#080808" face="Consolas, monospace"><span style="font-size: 8.3pt;">);<br />    </span></font><span style="color: rgb(140, 140, 140); font-family: Consolas, monospace; font-size: 8.3pt; font-style: italic;">// Reset the policy because the old one may no longer be valid.<br /></span><span style="color: rgb(140, 140, 140); font-family: Consolas, monospace; font-size: 8.3pt; font-style: italic;">    </span><font color="#080808" face="Consolas, monospace"><span style="font-size: 8.3pt;">mDisplayManagerPolicy = {};<br />    mDisplayManagerPolicy.defaultMode = currentModeId;<br />    </span></font><span style="color: rgb(102, 14, 122); font-family: Consolas, monospace; font-size: 8.3pt;">mMinSupportedRefreshRate </span><font color="#080808" face="Consolas, monospace"><span style="font-size: 8.3pt;">= </span></font><span style="color: rgb(0, 0, 0); font-family: Consolas, monospace; font-size: 8.3pt;">sortedModes</span><font color="#080808" face="Consolas, monospace"><span style="font-size: 8.3pt;">.front();<br />    </span></font><span style="color: rgb(102, 14, 122); font-family: Consolas, monospace; font-size: 8.3pt;">mMaxSupportedRefreshRate </span><font color="#080808" face="Consolas, monospace"><span style="font-size: 8.3pt;">= </span></font><span style="color: rgb(0, 0, 0); font-family: Consolas, monospace; font-size: 8.3pt;">sortedModes</span><font color="#080808" face="Consolas, monospace"><span style="font-size: 8.3pt;">.back();<br /><br />    </span></font><span style="color: rgb(102, 14, 122); font-family: Consolas, monospace; font-size: 8.3pt;">mSupportsFrameRateOverride </span><font color="#080808" face="Consolas, monospace"><span style="font-size: 8.3pt;">= </span></font><span style="color: rgb(0, 51, 179); font-family: Consolas, monospace; font-size: 8.3pt;">false</span><span style="color: rgb(8, 8, 8); font-family: Consolas, monospace; font-size: 8.3pt;">;<br /></span><span style="font-size: 11.0667px;"><font face="consolas" style="" color="#ff0000"><i style="">    // mConfig.enableFrameRateOverride 取自 ro.surface_flinger.enable_frame_rate_override，默认为 false<br /></i></font></span><span style="color: rgb(8, 8, 8); font-family: Consolas, monospace; font-size: 8.3pt;">    </span><span style="color: rgb(0, 51, 179); font-family: Consolas, monospace; font-size: 8.3pt;">if </span><font color="#080808" face="Consolas, monospace"><span style="font-size: 8.3pt;">(</span></font><span style="color: rgb(102, 14, 122); font-family: Consolas, monospace; font-size: 8.3pt;">mConfig</span><font color="#080808" face="Consolas, monospace"><span style="font-size: 8.3pt;">.</span></font><span style="color: rgb(102, 14, 122); font-family: Consolas, monospace; font-size: 8.3pt;">enableFrameRateOverride</span><font color="#080808" face="Consolas, monospace"><span style="font-size: 8.3pt;">) {<br />        </span></font><span style="color: rgb(0, 51, 179); font-family: Consolas, monospace; font-size: 8.3pt;">for </span><font color="#080808" face="Consolas, monospace"><span style="font-size: 8.3pt;">(</span></font><span style="color: rgb(0, 51, 179); font-family: Consolas, monospace; font-size: 8.3pt;">const auto</span><font color="#080808" face="Consolas, monospace"><span style="font-size: 8.3pt;">&amp; </span></font><span style="color: rgb(0, 0, 0); font-family: Consolas, monospace; font-size: 8.3pt;">mode1 </span><font color="#080808" face="Consolas, monospace"><span style="font-size: 8.3pt;">: </span></font><span style="color: rgb(0, 0, 0); font-family: Consolas, monospace; font-size: 8.3pt;">sortedModes</span><font color="#080808" face="Consolas, monospace"><span style="font-size: 8.3pt;">) {<br />            </span></font><span style="color: rgb(0, 51, 179); font-family: Consolas, monospace; font-size: 8.3pt;">for </span><font color="#080808" face="Consolas, monospace"><span style="font-size: 8.3pt;">(</span></font><span style="color: rgb(0, 51, 179); font-family: Consolas, monospace; font-size: 8.3pt;">const auto</span><font color="#080808" face="Consolas, monospace"><span style="font-size: 8.3pt;">&amp; </span></font><span style="color: rgb(0, 0, 0); font-family: Consolas, monospace; font-size: 8.3pt;">mode2 </span><font color="#080808" face="Consolas, monospace"><span style="font-size: 8.3pt;">: </span></font><span style="color: rgb(0, 0, 0); font-family: Consolas, monospace; font-size: 8.3pt;">sortedModes</span><font color="#080808" face="Consolas, monospace"><span style="font-size: 8.3pt;">) {<br />                </span></font><span style="color: rgb(0, 51, 179); font-family: Consolas, monospace; font-size: 8.3pt;">if </span><font color="#080808" face="Consolas, monospace"><span style="font-size: 8.3pt;">(getFrameRateDivider(mode1-&gt;getFps(), mode2-&gt;getFps()) &gt;= </span></font><span style="color: rgb(23, 80, 235); font-family: Consolas, monospace; font-size: 8.3pt;">2</span><font color="#080808" face="Consolas, monospace"><span style="font-size: 8.3pt;">) {<br />                    </span></font><span style="color: rgb(102, 14, 122); font-family: Consolas, monospace; font-size: 8.3pt;">mSupportsFrameRateOverride </span><font color="#080808" face="Consolas, monospace"><span style="font-size: 8.3pt;">= </span></font><span style="color: rgb(0, 51, 179); font-family: Consolas, monospace; font-size: 8.3pt;">true</span><font color="#080808" face="Consolas, monospace"><span style="font-size: 8.3pt;">;<br />                    </span></font><span style="color: rgb(0, 51, 179); font-family: Consolas, monospace; font-size: 8.3pt;">break</span><font color="#080808" face="Consolas, monospace"><span style="font-size: 8.3pt;">;<br />                }<br />            }<br />        }<br />    }<br /><br />    constructAvailableRefreshRates();<br />}</span></font></pre></pre></pre></pre></div></div></pre></pre></pre></pre></div></div></div></foreignObject><text x="2275" y="692" fill="rgb(0, 0, 0)" font-family="Courier New" font-size="12px">// aosp_android-12.1.0_r2\frameworks\native\services\surfaceflinger\Scheduler\RefreshRateConfigs.cppvoid RefreshRat...</text></switch></g><path d="M 1690 785 Q 1720 785 1980 732.5 Q 2240 680 2263.63 680" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 2268.88 680 L 2261.88 683.5 L 2263.63 680 L 2261.88 676.5 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><ellipse cx="1685" cy="785" rx="5" ry="5" fill="#000000" stroke="none" pointer-events="all"/><rect x="2270" y="1520" width="620" height="220" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 617px; height: 1px; padding-top: 1520px; margin-left: 2275px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: &quot;Courier New&quot;; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><pre style=""><pre style=""><pre style=""><pre style=""><div style="line-height: 16px;"><div style=""><pre style=""><pre style=""><pre style=""><font face="Consolas, monospace" color="#cccccc" style="background-color: rgb(255, 255, 255);"><span style="font-size: 11.0667px;">// aosp_android-12.1.0_r2\frameworks\native\services\surfaceflinger\Scheduler\Scheduler.cpp</span><span style="font-size: 8.3pt;"><br /></span></font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 128, 128); font-family: Consolas, monospace; font-size: 8.3pt;">impl</span><font color="#080808" face="Consolas, monospace" style="background-color: rgb(255, 255, 255);"><span style="font-size: 8.3pt;">::</span></font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 128, 128); font-family: Consolas, monospace; font-size: 8.3pt;">EventThread</span><font color="#080808" face="Consolas, monospace" style="background-color: rgb(255, 255, 255);"><span style="font-size: 8.3pt;">::</span></font><span style="background-color: rgb(255, 255, 255); color: rgb(55, 31, 128); font-family: Consolas, monospace; font-size: 8.3pt;">ThrottleVsyncCallback </span><span style="background-color: rgb(255, 255, 255); color: rgb(0, 128, 128); font-family: Consolas, monospace; font-size: 8.3pt;">Scheduler</span><font color="#080808" face="Consolas, monospace" style="background-color: rgb(255, 255, 255);"><span style="font-size: 8.3pt;">::</span></font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 98, 122); font-family: Consolas, monospace; font-size: 8.3pt;">makeThrottleVsyncCallback</span><font color="#080808" face="Consolas, monospace" style="background-color: rgb(255, 255, 255);"><span style="font-size: 8.3pt;">() </span></font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 51, 179); font-family: Consolas, monospace; font-size: 8.3pt;">const </span><font color="#080808" face="Consolas, monospace" style="background-color: rgb(255, 255, 255);"><span style="font-size: 8.3pt;">{<br />    std::scoped_lock lock(</span></font><span style="background-color: rgb(255, 255, 255); color: rgb(102, 14, 122); font-family: Consolas, monospace; font-size: 8.3pt;">mRefreshRateConfigsLock</span><font color="#080808" face="Consolas, monospace" style="background-color: rgb(255, 255, 255);"><span style="font-size: 8.3pt;">);<br />    </span></font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 51, 179); font-family: Consolas, monospace; font-size: 8.3pt;">if </span><font color="#080808" face="Consolas, monospace" style="background-color: rgb(255, 255, 255);"><span style="font-size: 8.3pt;">(!</span></font><span style="background-color: rgb(255, 255, 255); color: rgb(102, 14, 122); font-family: Consolas, monospace; font-size: 8.3pt;">mRefreshRateConfigs</span><span style="background-color: rgb(255, 255, 255); color: rgb(0, 128, 128); font-family: Consolas, monospace; font-size: 8.3pt;">-&gt;</span><span style="color: rgb(8, 8, 8); font-family: Consolas, monospace; font-size: 8.3pt; background-color: rgb(204, 204, 204);">supportsFrameRateOverride</span><span style="background-color: rgb(255, 255, 255);"><span style="color: rgb(8, 8, 8); font-family: Consolas, monospace; font-size: 8.3pt;">()) {<br /></span><span style="font-size: 11.0667px;"><font face="consolas" style="" color="#ff0000"><i style="">        // .enableFrameRateOverride 为 false，此处直接返回 {}，即 throttleVsync = {}<br /></i></font></span><span style="color: rgb(8, 8, 8); font-family: Consolas, monospace; font-size: 8.3pt;">        </span></span><span style="background-color: rgb(255, 255, 255); color: rgb(0, 51, 179); font-family: Consolas, monospace; font-size: 8.3pt;">return </span><font color="#080808" face="Consolas, monospace" style="background-color: rgb(255, 255, 255);"><span style="font-size: 8.3pt;">{};<br />    }<br /><br />    </span></font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 51, 179); font-family: Consolas, monospace; font-size: 8.3pt;">return </span><font color="#080808" face="Consolas, monospace" style="background-color: rgb(255, 255, 255);"><span style="font-size: 8.3pt;">[</span></font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 51, 179); font-family: Consolas, monospace; font-size: 8.3pt;">this</span><font color="#080808" face="Consolas, monospace" style="background-color: rgb(255, 255, 255);"><span style="font-size: 8.3pt;">](</span></font><span style="background-color: rgb(255, 255, 255); color: rgb(55, 31, 128); font-family: Consolas, monospace; font-size: 8.3pt;">nsecs_t </span><font color="#080808" face="Consolas, monospace" style="background-color: rgb(255, 255, 255);"><span style="font-size: 8.3pt;">expectedVsyncTimestamp, </span></font><span style="background-color: rgb(255, 255, 255); color: rgb(55, 31, 128); font-family: Consolas, monospace; font-size: 8.3pt;">uid_t </span><font color="#080808" face="Consolas, monospace" style="background-color: rgb(255, 255, 255);"><span style="font-size: 8.3pt;">uid) {<br />        </span></font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 51, 179); font-family: Consolas, monospace; font-size: 8.3pt;">return </span><font color="#080808" face="Consolas, monospace" style=""><span style="font-size: 8.3pt;"><span style="background-color: rgb(255, 255, 255);">!</span><span style="background-color: rgb(204, 204, 204);">isVsyncValid</span><span style="background-color: rgb(255, 255, 255);">(expectedVsyncTimestamp, uid);<br />    };<br />}</span></span></font></pre></pre></pre></div></div></pre></pre></pre></pre></div></div></div></foreignObject><text x="2275" y="1532" fill="rgb(0, 0, 0)" font-family="Courier New" font-size="12px">// aosp_android-12.1.0_r2\frameworks\native\services\surfaceflinger\Scheduler\Scheduler.cppimpl::EventT...</text></switch></g><path d="M 1890 1885 Q 1920 1885 2080 1702.5 Q 2240 1520 2263.63 1520" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 2268.88 1520 L 2261.88 1523.5 L 2263.63 1520 L 2261.88 1516.5 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><ellipse cx="1885" cy="1885" rx="5" ry="5" fill="#000000" stroke="none" pointer-events="all"/><rect x="2950" y="1520" width="670" height="60" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 667px; height: 1px; padding-top: 1520px; margin-left: 2955px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: &quot;Courier New&quot;; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><pre style=""><pre style=""><pre style=""><pre style=""><div style="line-height: 16px;"><div style=""><pre style=""><pre style=""><pre style="background-color: rgb(255, 255, 255);"><pre style=""><font face="Consolas, monospace" color="#cccccc"><span style="font-size: 11.0667px;">// aosp_android-12.1.0_r2\frameworks\native\services\surfaceflinger\Scheduler\RefreshRateConfigs.h</span><span style="font-size: 8.3pt;"><br /></span></font><span style="color: rgb(0, 51, 179); font-family: Consolas, monospace; font-size: 8.3pt;">bool </span><span style="color: rgb(0, 98, 122); font-family: Consolas, monospace; font-size: 8.3pt;">supportsFrameRateOverride</span><font color="#080808" face="Consolas, monospace"><span style="font-size: 8.3pt;">() </span></font><span style="color: rgb(0, 51, 179); font-family: Consolas, monospace; font-size: 8.3pt;">const </span><font color="#080808" face="Consolas, monospace"><span style="font-size: 8.3pt;">{ </span></font><span style="color: rgb(0, 51, 179); font-family: Consolas, monospace; font-size: 8.3pt;">return </span><span style="color: rgb(102, 14, 122); font-family: Consolas, monospace; font-size: 8.3pt;">mSupportsFrameRateOverride</span><font color="#080808" face="Consolas, monospace"><span style="font-size: 8.3pt;">; }</span></font></pre></pre></pre></pre></div></div></pre></pre></pre></pre></div></div></div></foreignObject><text x="2955" y="1532" fill="rgb(0, 0, 0)" font-family="Courier New" font-size="12px">// aosp_android-12.1.0_r2\frameworks\native\services\surfaceflinger\Scheduler\RefreshRateConfigs.hbool supports...</text></switch></g><path d="M 2630 1585 Q 2660 1585 2790 1552.5 Q 2920 1520 2943.63 1520" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 2948.88 1520 L 2941.88 1523.5 L 2943.63 1520 L 2941.88 1516.5 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><ellipse cx="2625" cy="1585" rx="5" ry="5" fill="#000000" stroke="none" pointer-events="all"/><rect x="2950" y="1600" width="620" height="190" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 617px; height: 1px; padding-top: 1600px; margin-left: 2955px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: &quot;Courier New&quot;; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><pre style=""><pre style=""><pre style=""><pre style=""><div style="line-height: 16px;"><div style=""><pre style=""><pre style=""><pre style=""><pre style=""><pre style=""><font face="Consolas, monospace" color="#cccccc" style="background-color: rgb(255, 255, 255);"><span style="font-size: 11.0667px;">// aosp_android-12.1.0_r2\frameworks\native\services\surfaceflinger\Scheduler\Scheduler.cpp</span><span style="font-size: 8.3pt;"><br /></span></font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 51, 179); font-family: Consolas, monospace; font-size: 8.3pt;">bool </span><span style="background-color: rgb(255, 255, 255); color: rgb(0, 128, 128); font-family: Consolas, monospace; font-size: 8.3pt;">Scheduler</span><font color="#080808" face="Consolas, monospace" style="background-color: rgb(255, 255, 255);"><span style="font-size: 8.3pt;">::</span></font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 98, 122); font-family: Consolas, monospace; font-size: 8.3pt;">isVsyncValid</span><font color="#080808" face="Consolas, monospace" style="background-color: rgb(255, 255, 255);"><span style="font-size: 8.3pt;">(</span></font><span style="background-color: rgb(255, 255, 255); color: rgb(55, 31, 128); font-family: Consolas, monospace; font-size: 8.3pt;">nsecs_t </span><font color="#080808" face="Consolas, monospace" style="background-color: rgb(255, 255, 255);"><span style="font-size: 8.3pt;">expectedVsyncTimestamp, </span></font><span style="background-color: rgb(255, 255, 255); color: rgb(55, 31, 128); font-family: Consolas, monospace; font-size: 8.3pt;">uid_t </span><font color="#080808" face="Consolas, monospace" style="background-color: rgb(255, 255, 255);"><span style="font-size: 8.3pt;">uid) </span></font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 51, 179); font-family: Consolas, monospace; font-size: 8.3pt;">const </span><span style="background-color: rgb(255, 255, 255); color: rgb(8, 8, 8); font-family: Consolas, monospace; font-size: 8.3pt;">{<br /></span><span style="background-color: rgb(255, 255, 255); font-size: 11.0667px;"><font face="consolas" style="" color="#ff0000"><i style="">    // 获取 uid 对应的帧率重载对象<br /></i></font></span><span style="background-color: rgb(255, 255, 255); color: rgb(8, 8, 8); font-family: Consolas, monospace; font-size: 8.3pt;">    </span><span style="background-color: rgb(255, 255, 255); color: rgb(0, 51, 179); font-family: Consolas, monospace; font-size: 8.3pt;">const auto </span><span style="background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-family: Consolas, monospace; font-size: 8.3pt;">frameRate </span><font color="#080808" face="Consolas, monospace" style=""><span style="font-size: 8.3pt;"><span style="background-color: rgb(255, 255, 255);">= </span><span style="background-color: rgb(204, 204, 204);">getFrameRateOverride</span><span style="background-color: rgb(255, 255, 255);">(uid);<br />    </span></span></font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 51, 179); font-family: Consolas, monospace; font-size: 8.3pt;">if </span><font color="#080808" face="Consolas, monospace" style="background-color: rgb(255, 255, 255);"><span style="font-size: 8.3pt;">(!frameRate.has_value()) {<br />        </span></font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 51, 179); font-family: Consolas, monospace; font-size: 8.3pt;">return true</span><font color="#080808" face="Consolas, monospace" style="background-color: rgb(255, 255, 255);"><span style="font-size: 8.3pt;">;<br />    }<br /><br />    </span></font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 51, 179); font-family: Consolas, monospace; font-size: 8.3pt;">return </span><font color="#080808" face="Consolas, monospace" style="background-color: rgb(255, 255, 255);"><span style="font-size: 8.3pt;">mVsyncSchedule.tracker-&gt;isVSyncInPhase(expectedVsyncTimestamp, *frameRate);<br />}</span></font></pre></pre></pre></pre></pre></div></div></pre></pre></pre></pre></div></div></div></foreignObject><text x="2955" y="1612" fill="rgb(0, 0, 0)" font-family="Courier New" font-size="12px">// aosp_android-12.1.0_r2\frameworks\native\services\surfaceflinger\Scheduler\Scheduler.cppbool Schedul...</text></switch></g><path d="M 2450 1685 Q 2480 1685 2700 1642.5 Q 2920 1600 2943.63 1600" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 2948.88 1600 L 2941.88 1603.5 L 2943.63 1600 L 2941.88 1596.5 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><ellipse cx="2445" cy="1685" rx="5" ry="5" fill="#000000" stroke="none" pointer-events="all"/><rect x="3630" y="1600" width="620" height="510" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 617px; height: 1px; padding-top: 1600px; margin-left: 3635px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: &quot;Courier New&quot;; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><pre style=""><pre style=""><pre style=""><pre style=""><div style="line-height: 16px;"><div style=""><pre style=""><pre style=""><pre style="background-color: rgb(255, 255, 255);"><pre style=""><pre style=""><pre style=""><font face="Consolas, monospace"><span style="font-size: 11.0667px;"><font color="#cccccc">// aosp_android-12.1.0_r2\frameworks\native\services\surfaceflinger\Scheduler\Scheduler.cpp</font></span><span style="font-size: 8.3pt;"><font color="#cccccc"><br /></font><font color="#080808">std::optional&lt;Fps&gt; </font></span></font><span style="color: rgb(0, 128, 128); font-family: Consolas, monospace; font-size: 8.3pt;">Scheduler</span><font color="#080808" face="Consolas, monospace"><span style="font-size: 8.3pt;">::</span></font><span style="color: rgb(0, 98, 122); font-family: Consolas, monospace; font-size: 8.3pt;">getFrameRateOverride</span><font color="#080808" face="Consolas, monospace"><span style="font-size: 8.3pt;">(uid_t uid) </span></font><span style="color: rgb(0, 51, 179); font-family: Consolas, monospace; font-size: 8.3pt;">const </span><font color="#080808" face="Consolas, monospace"><span style="font-size: 8.3pt;">{<br /></span><span style="font-size: 8.3pt;">    {<br />        std::scoped_lock lock(</span></font><span style="color: rgb(102, 14, 122); font-family: Consolas, monospace; font-size: 8.3pt;">mRefreshRateConfigsLock</span><span style="color: rgb(8, 8, 8); font-family: Consolas, monospace; font-size: 8.3pt;">);<br /></span><span style="font-size: 11.0667px;"><font face="consolas" style="" color="#ff0000"><i style="">        // RefreshRateConfigs::mSupportsFrameRateOverride = false<br /></i></font></span><span style="color: rgb(8, 8, 8); font-family: Consolas, monospace; font-size: 8.3pt;">        </span><span style="color: rgb(0, 51, 179); font-family: Consolas, monospace; font-size: 8.3pt;">if </span><font color="#080808" face="Consolas, monospace"><span style="font-size: 8.3pt;">(!</span></font><span style="color: rgb(102, 14, 122); font-family: Consolas, monospace; font-size: 8.3pt;">mRefreshRateConfigs</span><span style="color: rgb(0, 128, 128); font-family: Consolas, monospace; font-size: 8.3pt;">-&gt;</span><font color="#080808" face="Consolas, monospace"><span style="font-size: 8.3pt;">supportsFrameRateOverride()) {<br />            </span></font><span style="color: rgb(0, 51, 179); font-family: Consolas, monospace; font-size: 8.3pt;">return </span><span style="color: rgb(8, 8, 8); font-family: Consolas, monospace; font-size: 8.3pt;">std::nullopt;<br />        }<br />    }<br /></span><span style="font-size: 11.0667px;"><font face="consolas" style="" color="#ff0000"><i style="">    // 对每个 uid 有两处配置重载的地方：<br />    //     mFrameRateOverridesFromBackdoor<br />    //     mFrameRateOverridesByContent<br />    // 优先级递减<br /></i></font></span><span style="color: rgb(8, 8, 8); font-family: Consolas, monospace; font-size: 8.3pt;">    std::lock_guard </span><span style="color: rgb(0, 0, 0); font-family: Consolas, monospace; font-size: 8.3pt;">lock</span><font color="#080808" face="Consolas, monospace"><span style="font-size: 8.3pt;">(mFrameRateOverridesLock);<br />    {<br />        </span></font><span style="color: rgb(0, 51, 179); font-family: Consolas, monospace; font-size: 8.3pt;">const auto </span><span style="color: rgb(0, 0, 0); font-family: Consolas, monospace; font-size: 8.3pt;">iter </span><font color="#080808" face="Consolas, monospace"><span style="font-size: 8.3pt;">= mFrameRateOverridesFromBackdoor.find(uid);<br />        </span></font><span style="color: rgb(0, 51, 179); font-family: Consolas, monospace; font-size: 8.3pt;">if </span><font color="#080808" face="Consolas, monospace"><span style="font-size: 8.3pt;">(iter != mFrameRateOverridesFromBackdoor.end()) {<br />            </span></font><span style="color: rgb(0, 51, 179); font-family: Consolas, monospace; font-size: 8.3pt;">return </span><font color="#080808" face="Consolas, monospace"><span style="font-size: 8.3pt;">std::make_optional&lt;Fps&gt;(iter-&gt;second);<br />        }<br />    }<br /><br />    {<br />        </span></font><span style="color: rgb(0, 51, 179); font-family: Consolas, monospace; font-size: 8.3pt;">const auto </span><span style="color: rgb(0, 0, 0); font-family: Consolas, monospace; font-size: 8.3pt;">iter </span><font color="#080808" face="Consolas, monospace"><span style="font-size: 8.3pt;">= mFrameRateOverridesByContent.find(uid);<br />        </span></font><span style="color: rgb(0, 51, 179); font-family: Consolas, monospace; font-size: 8.3pt;">if </span><font color="#080808" face="Consolas, monospace"><span style="font-size: 8.3pt;">(iter != mFrameRateOverridesByContent.end()) {<br />            </span></font><span style="color: rgb(0, 51, 179); font-family: Consolas, monospace; font-size: 8.3pt;">return </span><font color="#080808" face="Consolas, monospace"><span style="font-size: 8.3pt;">std::make_optional&lt;Fps&gt;(iter-&gt;second);<br />        }<br />    }<br /><br />    </span></font><span style="color: rgb(0, 51, 179); font-family: Consolas, monospace; font-size: 8.3pt;">return </span><font color="#080808" face="Consolas, monospace"><span style="font-size: 8.3pt;">std::nullopt;<br />}</span></font></pre></pre></pre></pre></pre></pre></div></div></pre></pre></pre></pre></div></div></div></foreignObject><text x="3635" y="1612" fill="rgb(0, 0, 0)" font-family="Courier New" font-size="12px">// aosp_android-12.1.0_r2\frameworks\native\services\surfaceflinger\Scheduler\Scheduler.cppstd::optiona...</text></switch></g><path d="M 3250 1665 Q 3280 1665 3440 1632.5 Q 3600 1600 3623.63 1600" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 3628.88 1600 L 3621.88 1603.5 L 3623.63 1600 L 3621.88 1596.5 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><ellipse cx="3245" cy="1665" rx="5" ry="5" fill="#000000" stroke="none" pointer-events="all"/><rect x="5070" y="2429" width="290" height="90" fill="rgb(255, 255, 255)" stroke="#000000" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 287px; height: 1px; padding-top: 2429px; margin-left: 5075px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: &quot;Courier New&quot;; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><pre style=""><pre style=""><pre style=""><pre style=""><pre style=""><pre style=""><pre style=""><div style="line-height: 16px;"><div style="line-height: 16px;"><div style="line-height: 16px;"><div style="line-height: 16px;"><div style="line-height: 16px;"><div style="line-height: 16px;"><div style=""><pre style=""><font face="Consolas, monospace" color="#cccccc" style="background-color: rgb(255, 255, 255);"><span style="font-size: 11.0667px;">// frameworks\native\libs\gui\BitTube.cpp<br /></span></font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 128, 128); font-family: Consolas, monospace; font-size: 8.3pt;">BitTube</span><font color="#080808" face="Consolas, monospace" style="background-color: rgb(255, 255, 255);"><span style="font-size: 8.3pt;">::</span></font><span style="background-color: rgb(255, 255, 255); color: rgb(0, 98, 122); font-family: Consolas, monospace; font-size: 8.3pt;">BitTube</span><font color="#080808" face="Consolas, monospace" style="background-color: rgb(255, 255, 255);"><span style="font-size: 8.3pt;">(</span></font><span style="background-color: rgb(255, 255, 255); color: rgb(55, 31, 128); font-family: Consolas, monospace; font-size: 8.3pt;">size_t </span><font color="#080808" face="Consolas, monospace" style=""><span style="font-size: 8.3pt;"><span style="background-color: rgb(255, 255, 255);">bufsize) {<br />    </span><span style="background-color: rgb(204, 204, 204);">init</span><span style="background-color: rgb(255, 255, 255);">(bufsize, bufsize);<br />}</span></span></font></pre></div></div></div></div></div></div></div></pre></pre></pre></pre></pre></pre></pre></div></div></div></foreignObject><text x="5075" y="2441" fill="rgb(0, 0, 0)" font-family="Courier New" font-size="12px">// frameworks\native\libs\gui\BitTube.cpp...</text></switch></g><rect x="0" y="620" width="30" height="20" rx="10" ry="10" fill="#ff0000" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 28px; height: 1px; padding-top: 630px; margin-left: 1px;"><div data-drawio-colors="color: #FFFFFF; " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(255, 255, 255); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">1</div></div></div></foreignObject><text x="15" y="634" fill="#FFFFFF" font-family="Helvetica" font-size="12px" text-anchor="middle">1</text></switch></g><rect x="870" y="1040" width="30" height="20" rx="10" ry="10" fill="#ff0000" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 28px; height: 1px; padding-top: 1050px; margin-left: 871px;"><div data-drawio-colors="color: #FFFFFF; " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(255, 255, 255); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">2</div></div></div></foreignObject><text x="885" y="1054" fill="#FFFFFF" font-family="Helvetica" font-size="12px" text-anchor="middle">2</text></switch></g><rect x="70" y="1810" width="30" height="20" rx="10" ry="10" fill="#ff0000" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 28px; height: 1px; padding-top: 1820px; margin-left: 71px;"><div data-drawio-colors="color: #FFFFFF; " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(255, 255, 255); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">3</div></div></div></foreignObject><text x="85" y="1824" fill="#FFFFFF" font-family="Helvetica" font-size="12px" text-anchor="middle">3</text></switch></g><rect x="790" y="2120" width="30" height="20" rx="10" ry="10" fill="#ff0000" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 28px; height: 1px; padding-top: 2130px; margin-left: 791px;"><div data-drawio-colors="color: #FFFFFF; " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(255, 255, 255); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">4</div></div></div></foreignObject><text x="805" y="2134" fill="#FFFFFF" font-family="Helvetica" font-size="12px" text-anchor="middle">4</text></switch></g><rect x="1550" y="1875" width="30" height="20" rx="10" ry="10" fill="#ff0000" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 28px; height: 1px; padding-top: 1885px; margin-left: 1551px;"><div data-drawio-colors="color: #FFFFFF; " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(255, 255, 255); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">5</div></div></div></foreignObject><text x="1565" y="1889" fill="#FFFFFF" font-family="Helvetica" font-size="12px" text-anchor="middle">5</text></switch></g><rect x="1550" y="1905" width="30" height="20" rx="10" ry="10" fill="#ff0000" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 28px; height: 1px; padding-top: 1915px; margin-left: 1551px;"><div data-drawio-colors="color: #FFFFFF; " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(255, 255, 255); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">6</div></div></div></foreignObject><text x="1565" y="1919" fill="#FFFFFF" font-family="Helvetica" font-size="12px" text-anchor="middle">6</text></switch></g><rect x="2270" y="2620" width="30" height="20" rx="10" ry="10" fill="#ff0000" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 28px; height: 1px; padding-top: 2630px; margin-left: 2271px;"><div data-drawio-colors="color: #FFFFFF; " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(255, 255, 255); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">7</div></div></div></foreignObject><text x="2285" y="2634" fill="#FFFFFF" font-family="Helvetica" font-size="12px" text-anchor="middle">7</text></switch></g></g><switch><g requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"/><a transform="translate(0,-5)" xlink:href="https://www.diagrams.net/doc/faq/svg-export-text-problems" target="_blank"><text text-anchor="middle" font-size="10px" x="50%" y="100%">Text is not SVG - cannot display</text></a></switch></svg>